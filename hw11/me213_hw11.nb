(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    304720,       6056]
NotebookOptionsPosition[    299592,       5892]
NotebookOutlinePosition[    300117,       5910]
CellTagsIndexPosition[    300074,       5907]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SubValues", "[", "Derivative", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6060608346889343`*^9, 3.6060608393891706`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Problem", " ", "4"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Energies", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"T", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], " ", "M", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], " ", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], " ", "m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"y1", "'"}], "[", "t", "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"z1", "'"}], "[", "t", "]"}], "^", "2"}]}], ")"}]}]}]}], 
    " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V", "=", 
     RowBox[{"m", " ", "g", " ", 
      RowBox[{"z1", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Geometric", " ", "contrainsts"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"y1", "[", "t_", "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"y", "[", "t", "]"}], "+", " ", 
      RowBox[{"l", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"z1", "[", "t_", "]"}], " ", "=", " ", 
     RowBox[{"l", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"parameters", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"M", " ", "\[Rule]", "100"}], ",", " ", 
       RowBox[{"m", "\[Rule]", "50"}], ",", " ", 
       RowBox[{"l", "\[Rule]", "2"}], ",", 
       RowBox[{"g", "\[Rule]", "9.81"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"T", "=", 
    RowBox[{"Collect", "[", 
     RowBox[{"T", ",", "\[Theta]", ",", "Simplify"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"V", "=", 
    RowBox[{"Simplify", "[", "V", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L", " ", "=", " ", 
     RowBox[{"T", "-", "V"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.60480209441348*^9, 3.60480224637568*^9}, {
   3.6048053539504223`*^9, 3.604805414124034*^9}, {3.604847511925222*^9, 
   3.604847524509181*^9}, {3.604847870081482*^9, 3.6048478827970133`*^9}, {
   3.6048562737754707`*^9, 3.604856295529134*^9}, {3.604920144599045*^9, 
   3.604920155299158*^9}, {3.605975405992836*^9, 3.605975443551852*^9}, {
   3.6059754882271137`*^9, 3.605975496580023*^9}, {3.605975533651566*^9, 
   3.605975543938223*^9}, {3.6059853102508297`*^9, 3.605985336304511*^9}, {
   3.605985396064217*^9, 3.605985419855258*^9}, 3.606083266125321*^9, 
   3.606083309574587*^9, 3.606083419907196*^9, 3.606083466656435*^9, {
   3.606135037539248*^9, 3.606135037599989*^9}, {3.60633281897444*^9, 
   3.6063328513105392`*^9}, {3.6063328848706913`*^9, 3.606332891131785*^9}, {
   3.606333027289425*^9, 3.606333066134709*^9}, {3.606333630742352*^9, 
   3.606333644731192*^9}, {3.6063346828827477`*^9, 3.606334714481208*^9}, {
   3.606334777712214*^9, 3.606334777823902*^9}, {3.606335392266704*^9, 
   3.606335397629369*^9}, 3.6065908261352*^9, 3.60659087377417*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["l", "2"], " ", "m", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "(", "t", ")"}], "2"]}], "+", 
     RowBox[{"2", " ", "l", " ", "m", " ", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "(", "t", ")"}], " ", 
      RowBox[{"cos", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "+", "M"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "(", "t", ")"}], "2"]}]}], ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.605975497319916*^9, 3.6059778462545967`*^9, 3.6059847479568043`*^9, {
   3.6059853846412163`*^9, 3.60598542070373*^9}, 3.606056176777391*^9, 
   3.606060842718752*^9, 3.606061137983459*^9, {3.6060623757078*^9, 
   3.606062397035062*^9}, 3.6060647653155117`*^9, 3.606065236464774*^9, {
   3.60606527514742*^9, 3.606065301376217*^9}, 3.606066441958508*^9, 
   3.606082602374206*^9, 3.6060826344924097`*^9, 3.60608267330742*^9, 
   3.606083149763795*^9, {3.606083208371565*^9, 3.6060832240830507`*^9}, {
   3.6060832706893587`*^9, 3.606083310608101*^9}, {3.606083411269063*^9, 
   3.606083424163637*^9}, {3.606083467976819*^9, 3.6060835260023623`*^9}, 
   3.606083686270978*^9, 3.606083833401062*^9, {3.6061329140727243`*^9, 
   3.60613295694947*^9}, 3.606132999059803*^9, 3.606134987862258*^9, 
   3.606332858660829*^9, {3.606332892550878*^9, 3.6063329014440737`*^9}, {
   3.606333055233117*^9, 3.606333066415049*^9}, 3.606333649132063*^9, 
   3.6063344253842278`*^9, {3.606334663388479*^9, 3.606334715217478*^9}, 
   3.606334958403097*^9, 3.606335116747897*^9, 3.60633540206213*^9, 
   3.6065893086447153`*^9, 3.606589784221541*^9, {3.606589951471177*^9, 
   3.606589966716536*^9}, {3.606590016567686*^9, 3.606590040420644*^9}, 
   3.606590297702002*^9, 3.606590372163176*^9, 3.606590431268442*^9, 
   3.606590834538479*^9, {3.606590875423744*^9, 3.60659088108785*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"g", " ", "l", " ", "m", " ", 
   RowBox[{"cos", "(", 
    RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], TraditionalForm]], "Output",\

 CellChangeTimes->{
  3.605975497319916*^9, 3.6059778462545967`*^9, 3.6059847479568043`*^9, {
   3.6059853846412163`*^9, 3.60598542070373*^9}, 3.606056176777391*^9, 
   3.606060842718752*^9, 3.606061137983459*^9, {3.6060623757078*^9, 
   3.606062397035062*^9}, 3.6060647653155117`*^9, 3.606065236464774*^9, {
   3.60606527514742*^9, 3.606065301376217*^9}, 3.606066441958508*^9, 
   3.606082602374206*^9, 3.6060826344924097`*^9, 3.60608267330742*^9, 
   3.606083149763795*^9, {3.606083208371565*^9, 3.6060832240830507`*^9}, {
   3.6060832706893587`*^9, 3.606083310608101*^9}, {3.606083411269063*^9, 
   3.606083424163637*^9}, {3.606083467976819*^9, 3.6060835260023623`*^9}, 
   3.606083686270978*^9, 3.606083833401062*^9, {3.6061329140727243`*^9, 
   3.60613295694947*^9}, 3.606132999059803*^9, 3.606134987862258*^9, 
   3.606332858660829*^9, {3.606332892550878*^9, 3.6063329014440737`*^9}, {
   3.606333055233117*^9, 3.606333066415049*^9}, 3.606333649132063*^9, 
   3.6063344253842278`*^9, {3.606334663388479*^9, 3.606334715217478*^9}, 
   3.606334958403097*^9, 3.606335116747897*^9, 3.60633540206213*^9, 
   3.6065893086447153`*^9, 3.606589784221541*^9, {3.606589951471177*^9, 
   3.606589966716536*^9}, {3.606590016567686*^9, 3.606590040420644*^9}, 
   3.606590297702002*^9, 3.606590372163176*^9, 3.606590431268442*^9, 
   3.606590834538479*^9, {3.606590875423744*^9, 3.6065908810922117`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"E", "-", 
    RowBox[{"L", " ", "equations"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"eqn1", "=", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"L", ",", 
           RowBox[{
            RowBox[{"y", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}], 
       "-", 
       RowBox[{"D", "[", 
        RowBox[{"L", ",", 
         RowBox[{"y", "[", "t", "]"}]}], "]"}]}], "]"}], " ", "-", " ", 
     "f"}]}], "\[IndentingNewLine]", 
   RowBox[{"eqn2", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", 
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], 
       "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"ytt", "=", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"eqn1", "\[Equal]", "0"}], ",", " ", 
         RowBox[{"eqn2", "\[Equal]", "0"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "''"}], "[", "t", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}], "[", 
     
     RowBox[{"[", 
      RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[Theta]tt", "=", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"eqn1", "\[Equal]", "0"}], ",", " ", 
         RowBox[{"eqn2", "\[Equal]", "0"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "''"}], "[", "t", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}], "[", 
     
     RowBox[{"[", 
      RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.604802270230612*^9, 3.604802297448539*^9}, {
  3.60597545028353*^9, 3.6059754505710278`*^9}, {3.605975549158205*^9, 
  3.6059755528168707`*^9}, {3.60598538035201*^9, 3.605985380694002*^9}, {
  3.605985434383439*^9, 3.605985436589528*^9}, {3.606062336805756*^9, 
  3.606062392300824*^9}, {3.606332917955432*^9, 3.6063329399922533`*^9}, {
  3.606333097904853*^9, 3.6063331005414553`*^9}, {3.606334606940711*^9, 
  3.6063346519656267`*^9}, {3.606334727340597*^9, 3.6063347295266867`*^9}, {
  3.60658989027185*^9, 3.606590009918174*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "f"}], "+", 
   RowBox[{"l", " ", "m", " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
      MultilineFunction->None], "(", "t", ")"}], " ", 
    RowBox[{"cos", "(", 
     RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
   RowBox[{"l", " ", "m", " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "(", "t", ")"}], "2"], " ", 
    RowBox[{"sin", "(", 
     RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m", "+", "M"}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "(", "t", ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.6048022981883497`*^9, 3.604805429701419*^9, 3.6048478954205*^9, 
   3.604848380604824*^9, 3.604852826941059*^9, 3.6048549557113047`*^9, 
   3.60485612495221*^9, 3.60487236046386*^9, 3.605975452142623*^9, 
   3.6059755000495853`*^9, 3.6059755531859913`*^9, 3.605975596167368*^9, 
   3.605976203666453*^9, 3.605977848170267*^9, 3.605984748066732*^9, 
   3.605985382119973*^9, {3.605985441405431*^9, 3.605985460702155*^9}, 
   3.606056176829975*^9, 3.60606084276919*^9, 3.606061141004527*^9, {
   3.606062369858897*^9, 3.606062397088902*^9}, 3.606064765369216*^9, 
   3.606065236517949*^9, {3.606065275262528*^9, 3.606065301446177*^9}, 
   3.606066442045537*^9, 3.6060826024412947`*^9, 3.606082634583452*^9, 
   3.606082673400235*^9, 3.60608314982831*^9, {3.606083208446467*^9, 
   3.60608322415342*^9}, {3.60608327074959*^9, 3.6060832907768087`*^9}, {
   3.606083411340273*^9, 3.606083424249543*^9}, {3.606083473127097*^9, 
   3.606083526072352*^9}, 3.606083686336164*^9, 3.606083833478853*^9, {
   3.6061329141410503`*^9, 3.6061329570182734`*^9}, 3.6061329991098013`*^9, 
   3.6061349879927073`*^9, 3.606332864092003*^9, {3.606332906982832*^9, 
   3.60633294056675*^9}, 3.6063330704946012`*^9, 3.606333106525378*^9, {
   3.606333651760697*^9, 3.606333655284807*^9}, 3.606334425475154*^9, {
   3.606334633809236*^9, 3.606334665138283*^9}, 3.6063346972662897`*^9, 
   3.606334729980167*^9, 3.606334958491106*^9, 3.606335116824531*^9, 
   3.606335402158495*^9, 3.606589308746729*^9, 3.60658978428437*^9, {
   3.606589930760449*^9, 3.606590040483837*^9}, 3.606590297764439*^9, 
   3.606590372221133*^9, 3.606590431357847*^9, 3.606590834592496*^9, 
   3.606590881147624*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"l", " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"g", " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], "+", 
     RowBox[{"l", " ", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}], "+", 
     RowBox[{
      RowBox[{"cos", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}]}], ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.6048022981883497`*^9, 3.604805429701419*^9, 3.6048478954205*^9, 
   3.604848380604824*^9, 3.604852826941059*^9, 3.6048549557113047`*^9, 
   3.60485612495221*^9, 3.60487236046386*^9, 3.605975452142623*^9, 
   3.6059755000495853`*^9, 3.6059755531859913`*^9, 3.605975596167368*^9, 
   3.605976203666453*^9, 3.605977848170267*^9, 3.605984748066732*^9, 
   3.605985382119973*^9, {3.605985441405431*^9, 3.605985460702155*^9}, 
   3.606056176829975*^9, 3.60606084276919*^9, 3.606061141004527*^9, {
   3.606062369858897*^9, 3.606062397088902*^9}, 3.606064765369216*^9, 
   3.606065236517949*^9, {3.606065275262528*^9, 3.606065301446177*^9}, 
   3.606066442045537*^9, 3.6060826024412947`*^9, 3.606082634583452*^9, 
   3.606082673400235*^9, 3.60608314982831*^9, {3.606083208446467*^9, 
   3.60608322415342*^9}, {3.60608327074959*^9, 3.6060832907768087`*^9}, {
   3.606083411340273*^9, 3.606083424249543*^9}, {3.606083473127097*^9, 
   3.606083526072352*^9}, 3.606083686336164*^9, 3.606083833478853*^9, {
   3.6061329141410503`*^9, 3.6061329570182734`*^9}, 3.6061329991098013`*^9, 
   3.6061349879927073`*^9, 3.606332864092003*^9, {3.606332906982832*^9, 
   3.60633294056675*^9}, 3.6063330704946012`*^9, 3.606333106525378*^9, {
   3.606333651760697*^9, 3.606333655284807*^9}, 3.606334425475154*^9, {
   3.606334633809236*^9, 3.606334665138283*^9}, 3.6063346972662897`*^9, 
   3.606334729980167*^9, 3.606334958491106*^9, 3.606335116824531*^9, 
   3.606335402158495*^9, 3.606589308746729*^9, 3.60658978428437*^9, {
   3.606589930760449*^9, 3.606590040483837*^9}, 3.606590297764439*^9, 
   3.606590372221133*^9, 3.606590431357847*^9, 3.606590834592496*^9, 
   3.606590881198826*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"f", "-", 
     RowBox[{"g", " ", "m", " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
      RowBox[{"cos", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
     RowBox[{"l", " ", "m", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "(", "t", ")"}], "2"], " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], 
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{
       SuperscriptBox["cos", "2"], "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", "m", "-", "M"}]]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.6048022981883497`*^9, 3.604805429701419*^9, 3.6048478954205*^9, 
   3.604848380604824*^9, 3.604852826941059*^9, 3.6048549557113047`*^9, 
   3.60485612495221*^9, 3.60487236046386*^9, 3.605975452142623*^9, 
   3.6059755000495853`*^9, 3.6059755531859913`*^9, 3.605975596167368*^9, 
   3.605976203666453*^9, 3.605977848170267*^9, 3.605984748066732*^9, 
   3.605985382119973*^9, {3.605985441405431*^9, 3.605985460702155*^9}, 
   3.606056176829975*^9, 3.60606084276919*^9, 3.606061141004527*^9, {
   3.606062369858897*^9, 3.606062397088902*^9}, 3.606064765369216*^9, 
   3.606065236517949*^9, {3.606065275262528*^9, 3.606065301446177*^9}, 
   3.606066442045537*^9, 3.6060826024412947`*^9, 3.606082634583452*^9, 
   3.606082673400235*^9, 3.60608314982831*^9, {3.606083208446467*^9, 
   3.60608322415342*^9}, {3.60608327074959*^9, 3.6060832907768087`*^9}, {
   3.606083411340273*^9, 3.606083424249543*^9}, {3.606083473127097*^9, 
   3.606083526072352*^9}, 3.606083686336164*^9, 3.606083833478853*^9, {
   3.6061329141410503`*^9, 3.6061329570182734`*^9}, 3.6061329991098013`*^9, 
   3.6061349879927073`*^9, 3.606332864092003*^9, {3.606332906982832*^9, 
   3.60633294056675*^9}, 3.6063330704946012`*^9, 3.606333106525378*^9, {
   3.606333651760697*^9, 3.606333655284807*^9}, 3.606334425475154*^9, {
   3.606334633809236*^9, 3.606334665138283*^9}, 3.6063346972662897`*^9, 
   3.606334729980167*^9, 3.606334958491106*^9, 3.606335116824531*^9, 
   3.606335402158495*^9, 3.606589308746729*^9, 3.60658978428437*^9, {
   3.606589930760449*^9, 3.606590040483837*^9}, 3.606590297764439*^9, 
   3.606590372221133*^9, 3.606590431357847*^9, 3.606590834592496*^9, 
   3.606590881235633*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      RowBox[{"f", " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], "+", 
     RowBox[{"g", " ", "m", " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
     RowBox[{"g", " ", "M", " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
     RowBox[{"l", " ", "m", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "(", "t", ")"}], "2"], " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
      RowBox[{"cos", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], 
    RowBox[{"l", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{
         SuperscriptBox["cos", "2"], "(", 
         RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", "m", "-", "M"}], 
      ")"}]}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.6048022981883497`*^9, 3.604805429701419*^9, 3.6048478954205*^9, 
   3.604848380604824*^9, 3.604852826941059*^9, 3.6048549557113047`*^9, 
   3.60485612495221*^9, 3.60487236046386*^9, 3.605975452142623*^9, 
   3.6059755000495853`*^9, 3.6059755531859913`*^9, 3.605975596167368*^9, 
   3.605976203666453*^9, 3.605977848170267*^9, 3.605984748066732*^9, 
   3.605985382119973*^9, {3.605985441405431*^9, 3.605985460702155*^9}, 
   3.606056176829975*^9, 3.60606084276919*^9, 3.606061141004527*^9, {
   3.606062369858897*^9, 3.606062397088902*^9}, 3.606064765369216*^9, 
   3.606065236517949*^9, {3.606065275262528*^9, 3.606065301446177*^9}, 
   3.606066442045537*^9, 3.6060826024412947`*^9, 3.606082634583452*^9, 
   3.606082673400235*^9, 3.60608314982831*^9, {3.606083208446467*^9, 
   3.60608322415342*^9}, {3.60608327074959*^9, 3.6060832907768087`*^9}, {
   3.606083411340273*^9, 3.606083424249543*^9}, {3.606083473127097*^9, 
   3.606083526072352*^9}, 3.606083686336164*^9, 3.606083833478853*^9, {
   3.6061329141410503`*^9, 3.6061329570182734`*^9}, 3.6061329991098013`*^9, 
   3.6061349879927073`*^9, 3.606332864092003*^9, {3.606332906982832*^9, 
   3.60633294056675*^9}, 3.6063330704946012`*^9, 3.606333106525378*^9, {
   3.606333651760697*^9, 3.606333655284807*^9}, 3.606334425475154*^9, {
   3.606334633809236*^9, 3.606334665138283*^9}, 3.6063346972662897`*^9, 
   3.606334729980167*^9, 3.606334958491106*^9, 3.606335116824531*^9, 
   3.606335402158495*^9, 3.606589308746729*^9, 3.60658978428437*^9, {
   3.606589930760449*^9, 3.606590040483837*^9}, 3.606590297764439*^9, 
   3.606590372221133*^9, 3.606590431357847*^9, 3.606590834592496*^9, 
   3.6065908812824297`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"leqn1", " ", "=", " ", 
  RowBox[{"eqn1", " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "^", "2"}], "\[Rule]", 
      "0"}], ",", " ", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "\[Rule]", "1"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"leqn2", " ", "=", " ", 
  RowBox[{"eqn2", " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "\[Rule]", 
      RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "\[Rule]", "1"}]}], 
    "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.605976205935767*^9, 3.6059762273641033`*^9}, {
  3.605976336566934*^9, 3.60597649282242*^9}, {3.60598544532171*^9, 
  3.6059854574921227`*^9}, {3.606062323725559*^9, 3.606062333790209*^9}, {
  3.606332959832386*^9, 3.606333014367187*^9}, {3.606333115645891*^9, 
  3.606333138459887*^9}, {3.606333277140132*^9, 3.6063332830248213`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "f"}], "+", 
   RowBox[{"l", " ", "m", " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
      MultilineFunction->None], "(", "t", ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m", "+", "M"}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "(", "t", ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.605976351428172*^9, 3.605976430129455*^9}, {
   3.605976481817132*^9, 3.605976493194154*^9}, 3.605977849868903*^9, 
   3.605984748169718*^9, 3.60598546223773*^9, 3.6060561768801947`*^9, 
   3.6060608428248796`*^9, 3.6060611426247168`*^9, 3.606062397136218*^9, 
   3.60606476543435*^9, 3.606065236596776*^9, {3.606065275328137*^9, 
   3.6060653015106277`*^9}, 3.606066442121314*^9, 3.60608260250426*^9, 
   3.606082634637411*^9, 3.606082673513713*^9, 3.6060831498954372`*^9, {
   3.606083208510172*^9, 3.606083224200952*^9}, {3.606083270832395*^9, 
   3.606083290847048*^9}, {3.6060834113993607`*^9, 3.606083424316391*^9}, {
   3.606083473220859*^9, 3.606083526140999*^9}, 3.606083686459135*^9, 
   3.606083833586589*^9, {3.606132914185533*^9, 3.60613295708288*^9}, 
   3.606132999204576*^9, 3.606134988111198*^9, {3.6063329724023657`*^9, 
   3.606333015310227*^9}, 3.6063330772641563`*^9, {3.606333111316434*^9, 
   3.606333139411409*^9}, 3.6063332844356956`*^9, 3.606333660026533*^9, 
   3.6063344255735273`*^9, 3.606334958660727*^9, 3.606335117038146*^9, 
   3.606335402309462*^9, 3.606589308882259*^9, 3.6065897844319887`*^9, 
   3.606589951686652*^9, {3.606590016773053*^9, 3.606590040673912*^9}, 
   3.606590297966896*^9, 3.60659037239567*^9, 3.606590431543201*^9, 
   3.60659083476173*^9, 3.606590881331605*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"l", " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"g", " ", 
       RowBox[{"\[Theta]", "(", "t", ")"}]}]}], "+", 
     RowBox[{"l", " ", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]\[Prime]",
       MultilineFunction->None], "(", "t", ")"}]}], ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.605976351428172*^9, 3.605976430129455*^9}, {
   3.605976481817132*^9, 3.605976493194154*^9}, 3.605977849868903*^9, 
   3.605984748169718*^9, 3.60598546223773*^9, 3.6060561768801947`*^9, 
   3.6060608428248796`*^9, 3.6060611426247168`*^9, 3.606062397136218*^9, 
   3.60606476543435*^9, 3.606065236596776*^9, {3.606065275328137*^9, 
   3.6060653015106277`*^9}, 3.606066442121314*^9, 3.60608260250426*^9, 
   3.606082634637411*^9, 3.606082673513713*^9, 3.6060831498954372`*^9, {
   3.606083208510172*^9, 3.606083224200952*^9}, {3.606083270832395*^9, 
   3.606083290847048*^9}, {3.6060834113993607`*^9, 3.606083424316391*^9}, {
   3.606083473220859*^9, 3.606083526140999*^9}, 3.606083686459135*^9, 
   3.606083833586589*^9, {3.606132914185533*^9, 3.60613295708288*^9}, 
   3.606132999204576*^9, 3.606134988111198*^9, {3.6063329724023657`*^9, 
   3.606333015310227*^9}, 3.6063330772641563`*^9, {3.606333111316434*^9, 
   3.606333139411409*^9}, 3.6063332844356956`*^9, 3.606333660026533*^9, 
   3.6063344255735273`*^9, 3.606334958660727*^9, 3.606335117038146*^9, 
   3.606335402309462*^9, 3.606589308882259*^9, 3.6065897844319887`*^9, 
   3.606589951686652*^9, {3.606590016773053*^9, 3.606590040673912*^9}, 
   3.606590297966896*^9, 3.60659037239567*^9, 3.606590431543201*^9, 
   3.60659083476173*^9, 3.606590881335622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Collect", "[", 
  RowBox[{"leqn1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{"leqn2", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.604805525509398*^9, 3.6048055286852818`*^9}, {
   3.604805580122101*^9, 3.604805645074325*^9}, {3.605975561707066*^9, 
   3.605975588832704*^9}, 3.605976441072281*^9, 3.6059764991501217`*^9, {
   3.6059854672356462`*^9, 3.605985476611609*^9}, {3.6063331475486*^9, 
   3.606333168156034*^9}, {3.6063332902843943`*^9, 3.606333294247875*^9}, {
   3.606333364911118*^9, 3.606333371479866*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "f"}], "+", 
   RowBox[{"l", " ", "m", " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
      MultilineFunction->None], "(", "t", ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m", "+", "M"}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "(", "t", ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.604805529330908*^9, 3.604805615218313*^9, 3.604805645702003*^9, 
   3.604847901735227*^9, 3.604848386330194*^9, 3.604852828350754*^9, 
   3.604854957165372*^9, 3.604856126402893*^9, 3.604872362000404*^9, 
   3.605975589177782*^9, {3.605976437495226*^9, 3.605976441344075*^9}, {
   3.6059764965451717`*^9, 3.60597649942304*^9}, 3.605977851732655*^9, 
   3.605984748271934*^9, 3.605985477782193*^9, 3.6060561769288187`*^9, 
   3.606060842867441*^9, 3.606061143848343*^9, 3.606062397185429*^9, 
   3.6060647654841967`*^9, 3.606065236652707*^9, {3.606065275376589*^9, 
   3.606065301577229*^9}, 3.606066442188479*^9, 3.606082602565214*^9, 
   3.606082634687838*^9, 3.606082673577385*^9, 3.606083149954186*^9, {
   3.606083208575363*^9, 3.606083224268681*^9}, {3.606083270885355*^9, 
   3.606083290894786*^9}, {3.606083411466145*^9, 3.6060834243642073`*^9}, {
   3.606083473268873*^9, 3.606083526219103*^9}, 3.6060836865255547`*^9, 
   3.606083833635504*^9, {3.606132914238997*^9, 3.606132957127825*^9}, 
   3.606132999254973*^9, 3.60613498817476*^9, {3.6063331580796347`*^9, 
   3.606333173656746*^9}, 3.606333295894844*^9, 3.606333373016789*^9, 
   3.6063336741318808`*^9, 3.606334425628682*^9, 3.606334958726915*^9, 
   3.6063351171062603`*^9, 3.606335402377767*^9, 3.606589308931332*^9, 
   3.6065897845438623`*^9, 3.606589951732806*^9, {3.6065900168239717`*^9, 
   3.606590040725975*^9}, 3.606590298017397*^9, 3.606590372485013*^9, 
   3.60659043159693*^9, 3.606590834815167*^9, 3.606590881378574*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"l", " ", "m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["y", "\[Prime]\[Prime]",
        MultilineFunction->None], "(", "t", ")"}], "-", 
      RowBox[{"g", " ", 
       RowBox[{"\[Theta]", "(", "t", ")"}]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["l", "2"], " ", "m", " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
      MultilineFunction->None], "(", "t", ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.604805529330908*^9, 3.604805615218313*^9, 3.604805645702003*^9, 
   3.604847901735227*^9, 3.604848386330194*^9, 3.604852828350754*^9, 
   3.604854957165372*^9, 3.604856126402893*^9, 3.604872362000404*^9, 
   3.605975589177782*^9, {3.605976437495226*^9, 3.605976441344075*^9}, {
   3.6059764965451717`*^9, 3.60597649942304*^9}, 3.605977851732655*^9, 
   3.605984748271934*^9, 3.605985477782193*^9, 3.6060561769288187`*^9, 
   3.606060842867441*^9, 3.606061143848343*^9, 3.606062397185429*^9, 
   3.6060647654841967`*^9, 3.606065236652707*^9, {3.606065275376589*^9, 
   3.606065301577229*^9}, 3.606066442188479*^9, 3.606082602565214*^9, 
   3.606082634687838*^9, 3.606082673577385*^9, 3.606083149954186*^9, {
   3.606083208575363*^9, 3.606083224268681*^9}, {3.606083270885355*^9, 
   3.606083290894786*^9}, {3.606083411466145*^9, 3.6060834243642073`*^9}, {
   3.606083473268873*^9, 3.606083526219103*^9}, 3.6060836865255547`*^9, 
   3.606083833635504*^9, {3.606132914238997*^9, 3.606132957127825*^9}, 
   3.606132999254973*^9, 3.60613498817476*^9, {3.6063331580796347`*^9, 
   3.606333173656746*^9}, 3.606333295894844*^9, 3.606333373016789*^9, 
   3.6063336741318808`*^9, 3.606334425628682*^9, 3.606334958726915*^9, 
   3.6063351171062603`*^9, 3.606335402377767*^9, 3.606589308931332*^9, 
   3.6065897845438623`*^9, 3.606589951732806*^9, {3.6065900168239717`*^9, 
   3.606590040725975*^9}, 3.606590298017397*^9, 3.606590372485013*^9, 
   3.60659043159693*^9, 3.606590834815167*^9, 3.606590881382639*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Let", " ", "state", " ", "vector", " ", "x"}], " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
    "y", ",", " ", "\[Theta]", ",", " ", "yt", ",", " ", "\[Theta]t"}], 
    ")"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.606333402814021*^9, 3.6063334182843637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Solve", " ", "for", " ", "state", " ", "space", " ", "equations"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sol", " ", "=", " ", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"leqn1", "\[Equal]", "0"}], ",", 
         RowBox[{"leqn2", "\[Equal]", "0"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "''"}], "[", "t", "]"}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"p1", " ", "=", " ", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"sol", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], ",", " ", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"p2", " ", "=", " ", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"sol", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], ",", " ", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"a22", " ", "=", " ", 
    RowBox[{
     RowBox[{"p1", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", "1"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"a32", " ", "=", " ", 
    RowBox[{
     RowBox[{"p2", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", "1"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"b1", " ", "=", " ", 
    RowBox[{
     RowBox[{"p1", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", "/.", " ", 
     RowBox[{"f", "\[Rule]", "1"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"b2", " ", "=", " ", 
    RowBox[{
     RowBox[{"p2", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", "/.", " ", 
     RowBox[{"f", "\[Rule]", "1"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6048034368818703`*^9, 3.604803472525948*^9}, {
   3.604805709726656*^9, 3.604806071984168*^9}, {3.604920167972171*^9, 
   3.6049201758737173`*^9}, {3.605976509572876*^9, 3.605976555035275*^9}, 
   3.605976609412343*^9, {3.6059766494966373`*^9, 3.605976834508479*^9}, {
   3.6059768652113247`*^9, 3.605976891179995*^9}, {3.6059854827248487`*^9, 
   3.6059855238369617`*^9}, {3.605985622656598*^9, 3.605985694263084*^9}, {
   3.606061093396781*^9, 3.606061161624701*^9}, {3.60606231443097*^9, 
   3.606062315302566*^9}, {3.6063331831912403`*^9, 3.60633319800287*^9}, {
   3.6063332294296703`*^9, 3.6063332358507147`*^9}, {3.606333305552567*^9, 
   3.606333326114719*^9}, {3.606333378242413*^9, 3.606333387434039*^9}, {
   3.60633348643056*^9, 3.606333500085647*^9}, {3.606333538723114*^9, 
   3.606333583289427*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "(", "t", ")"}], "\[Rule]", 
   RowBox[{
    FractionBox["f", "M"], "-", 
    FractionBox[
     RowBox[{"g", " ", "m", " ", 
      RowBox[{"\[Theta]", "(", "t", ")"}]}], "M"]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.606333311003419*^9, 3.6063333292077436`*^9}, 
   3.606333390540183*^9, 3.606333554607299*^9, 3.6063335852896137`*^9, 
   3.606333676663974*^9, 3.606334425787518*^9, 3.606334958834037*^9, 
   3.606335117266193*^9, 3.6063354024705772`*^9, 3.606589309013651*^9, 
   3.606589784623405*^9, 3.6065899518133173`*^9, {3.6065900169030457`*^9, 
   3.606590040804493*^9}, 3.606590298094306*^9, 3.606590372567134*^9, 
   3.606590431664382*^9, 3.606590834875749*^9, 3.606590881447263*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
     MultilineFunction->None], "(", "t", ")"}], "\[Rule]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["f", 
      RowBox[{"l", " ", "M"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"\[Theta]", "(", "t", ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"g", " ", "m"}]}], "-", 
        RowBox[{"g", " ", "M"}]}], ")"}]}], 
     RowBox[{"l", " ", "M"}]]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.606333311003419*^9, 3.6063333292077436`*^9}, 
   3.606333390540183*^9, 3.606333554607299*^9, 3.6063335852896137`*^9, 
   3.606333676663974*^9, 3.606334425787518*^9, 3.606334958834037*^9, 
   3.606335117266193*^9, 3.6063354024705772`*^9, 3.606589309013651*^9, 
   3.606589784623405*^9, 3.6065899518133173`*^9, {3.6065900169030457`*^9, 
   3.606590040804493*^9}, 3.606590298094306*^9, 3.606590372567134*^9, 
   3.606590431664382*^9, 3.606590834875749*^9, 3.606590881495139*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"g", " ", "m"}], "M"]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.606333311003419*^9, 3.6063333292077436`*^9}, 
   3.606333390540183*^9, 3.606333554607299*^9, 3.6063335852896137`*^9, 
   3.606333676663974*^9, 3.606334425787518*^9, 3.606334958834037*^9, 
   3.606335117266193*^9, 3.6063354024705772`*^9, 3.606589309013651*^9, 
   3.606589784623405*^9, 3.6065899518133173`*^9, {3.6065900169030457`*^9, 
   3.606590040804493*^9}, 3.606590298094306*^9, 3.606590372567134*^9, 
   3.606590431664382*^9, 3.606590834875749*^9, 3.606590881498583*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      RowBox[{"g", " ", "m"}]}], "-", 
     RowBox[{"g", " ", "M"}]}], 
    RowBox[{"l", " ", "M"}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.606333311003419*^9, 3.6063333292077436`*^9}, 
   3.606333390540183*^9, 3.606333554607299*^9, 3.6063335852896137`*^9, 
   3.606333676663974*^9, 3.606334425787518*^9, 3.606334958834037*^9, 
   3.606335117266193*^9, 3.6063354024705772`*^9, 3.606589309013651*^9, 
   3.606589784623405*^9, 3.6065899518133173`*^9, {3.6065900169030457`*^9, 
   3.606590040804493*^9}, 3.606590298094306*^9, 3.606590372567134*^9, 
   3.606590431664382*^9, 3.606590834875749*^9, 3.606590881501483*^9}],

Cell[BoxData[
 FormBox[
  FractionBox["1", "M"], TraditionalForm]], "Output",
 CellChangeTimes->{{3.606333311003419*^9, 3.6063333292077436`*^9}, 
   3.606333390540183*^9, 3.606333554607299*^9, 3.6063335852896137`*^9, 
   3.606333676663974*^9, 3.606334425787518*^9, 3.606334958834037*^9, 
   3.606335117266193*^9, 3.6063354024705772`*^9, 3.606589309013651*^9, 
   3.606589784623405*^9, 3.6065899518133173`*^9, {3.6065900169030457`*^9, 
   3.606590040804493*^9}, 3.606590298094306*^9, 3.606590372567134*^9, 
   3.606590431664382*^9, 3.606590834875749*^9, 3.606590881504322*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{"l", " ", "M"}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.606333311003419*^9, 3.6063333292077436`*^9}, 
   3.606333390540183*^9, 3.606333554607299*^9, 3.6063335852896137`*^9, 
   3.606333676663974*^9, 3.606334425787518*^9, 3.606334958834037*^9, 
   3.606335117266193*^9, 3.6063354024705772`*^9, 3.606589309013651*^9, 
   3.606589784623405*^9, 3.6065899518133173`*^9, {3.6065900169030457`*^9, 
   3.606590040804493*^9}, 3.606590298094306*^9, 3.606590372567134*^9, 
   3.606590431664382*^9, 3.606590834875749*^9, 3.6065908815071507`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"State", " ", "space", " ", "matrix"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"A", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "a22", ",", "0", ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "a32", ",", "0", ",", "0"}], "}"}]}], "}"}], " ", "/.",
      "parameters"}]}], "\[IndentingNewLine]", 
   RowBox[{"B", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "b1", "}"}], ",", 
       RowBox[{"{", "b2", "}"}]}], "}"}], " ", "/.", 
     "parameters"}]}]}]}]], "Input",
 CellChangeTimes->{{3.604803483042338*^9, 3.604803486964986*^9}, {
  3.604805660697*^9, 3.60480569772714*^9}, {3.604806077448135*^9, 
  3.604806101606605*^9}, {3.604920179980824*^9, 3.6049201861314707`*^9}, {
  3.605976575135672*^9, 3.605976641666122*^9}, {3.605976850671426*^9, 
  3.605976852797145*^9}, {3.605976896469544*^9, 3.6059769065851717`*^9}, {
  3.60597702126826*^9, 3.6059770342254333`*^9}, {3.60598472980851*^9, 
  3.6059847723234*^9}, {3.605985627521777*^9, 3.6059856417440777`*^9}, {
  3.6059856784799*^9, 3.605985683592853*^9}, {3.6063334446227293`*^9, 
  3.6063335037485857`*^9}, {3.6063335594531593`*^9, 3.606333600706846*^9}, {
  3.606334091255105*^9, 3.606334096179613*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"},
     {"0", 
      RowBox[{"-", "4.905`"}], "0", "0"},
     {"0", "7.3575`", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.604805685560153*^9, {3.604806097490699*^9, 3.604806102456605*^9}, 
   3.604847906576515*^9, 3.604848391116088*^9, 3.604852828621973*^9, 
   3.6048549574821243`*^9, 3.604856126713599*^9, 3.604872362338916*^9, 
   3.605976599172155*^9, 3.605976645949355*^9, 3.6059768377606277`*^9, 
   3.605976907200419*^9, {3.605977027765252*^9, 3.605977034797621*^9}, 
   3.6059778626049337`*^9, {3.6059847429024763`*^9, 3.6059847731763563`*^9}, 
   3.605985697312337*^9, 3.606056177027391*^9, 3.60606084297022*^9, 
   3.606061168681691*^9, 3.606062397284177*^9, 3.6060647656299267`*^9, 
   3.6060652367852173`*^9, {3.606065275487371*^9, 3.606065301691169*^9}, 
   3.606066442297607*^9, 3.606082602683894*^9, 3.606082634805729*^9, 
   3.606082673701091*^9, 3.6060831500896063`*^9, {3.606083208724115*^9, 
   3.606083224398409*^9}, {3.606083271052648*^9, 3.6060832910612783`*^9}, {
   3.606083411595887*^9, 3.6060834244956417`*^9}, {3.60608347339914*^9, 
   3.60608352637332*^9}, 3.606083686655815*^9, 3.6060838337708797`*^9, {
   3.606132914355597*^9, 3.60613295722567*^9}, 3.6061329993703203`*^9, 
   3.606134988321196*^9, {3.606333594937702*^9, 3.606333601014112*^9}, {
   3.606333705581419*^9, 3.606333728321433*^9}, 3.606334096780262*^9, 
   3.606334425940674*^9, 3.6063349590849667`*^9, 3.606335117419166*^9, 
   3.60633540257242*^9, 3.606589309079255*^9, 3.606589784695128*^9, 
   3.606589951866816*^9, {3.606590016952207*^9, 3.60659004091908*^9}, 
   3.606590298214723*^9, 3.606590372638324*^9, 3.6065904317629547`*^9, 
   3.606590834987121*^9, 3.6065908815650043`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0"},
     {"0"},
     {
      FractionBox["1", "100"]},
     {
      RowBox[{"-", 
       FractionBox["1", "200"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.604805685560153*^9, {3.604806097490699*^9, 3.604806102456605*^9}, 
   3.604847906576515*^9, 3.604848391116088*^9, 3.604852828621973*^9, 
   3.6048549574821243`*^9, 3.604856126713599*^9, 3.604872362338916*^9, 
   3.605976599172155*^9, 3.605976645949355*^9, 3.6059768377606277`*^9, 
   3.605976907200419*^9, {3.605977027765252*^9, 3.605977034797621*^9}, 
   3.6059778626049337`*^9, {3.6059847429024763`*^9, 3.6059847731763563`*^9}, 
   3.605985697312337*^9, 3.606056177027391*^9, 3.60606084297022*^9, 
   3.606061168681691*^9, 3.606062397284177*^9, 3.6060647656299267`*^9, 
   3.6060652367852173`*^9, {3.606065275487371*^9, 3.606065301691169*^9}, 
   3.606066442297607*^9, 3.606082602683894*^9, 3.606082634805729*^9, 
   3.606082673701091*^9, 3.6060831500896063`*^9, {3.606083208724115*^9, 
   3.606083224398409*^9}, {3.606083271052648*^9, 3.6060832910612783`*^9}, {
   3.606083411595887*^9, 3.6060834244956417`*^9}, {3.60608347339914*^9, 
   3.60608352637332*^9}, 3.606083686655815*^9, 3.6060838337708797`*^9, {
   3.606132914355597*^9, 3.60613295722567*^9}, 3.6061329993703203`*^9, 
   3.606134988321196*^9, {3.606333594937702*^9, 3.606333601014112*^9}, {
   3.606333705581419*^9, 3.606333728321433*^9}, 3.606334096780262*^9, 
   3.606334425940674*^9, 3.6063349590849667`*^9, 3.606335117419166*^9, 
   3.60633540257242*^9, 3.606589309079255*^9, 3.606589784695128*^9, 
   3.606589951866816*^9, {3.606590016952207*^9, 3.60659004091908*^9}, 
   3.606590298214723*^9, 3.606590372638324*^9, 3.6065904317629547`*^9, 
   3.606590834987121*^9, 3.6065908815700397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Q", " ", "=", " ", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Flatten", "[", "B", "]"}], ",", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"A", ".", "B"}], "]"}], ",", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"A", ".", "A", ".", "B"}], "]"}], ",", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"A", ".", "A", ".", "A", ".", "B"}], "]"}]}], "}"}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.605976910070673*^9, 3.6059769359948683`*^9}, {
  3.6059770079538717`*^9, 3.605977014783869*^9}, {3.6059773160653543`*^9, 
  3.605977318433234*^9}, {3.605977870183344*^9, 3.605977871546959*^9}, {
  3.60598570358638*^9, 3.605985704086526*^9}, {3.606056218626574*^9, 
  3.6060562231984253`*^9}, {3.6060833215932083`*^9, 3.606083327951441*^9}, {
  3.606333608464148*^9, 3.60633362077641*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0.01`", "0.`", "0.024525`"},
     {"0", 
      RowBox[{"-", "0.005`"}], "0.`", 
      RowBox[{"-", "0.0367875`"}]},
     {
      FractionBox["1", "100"], "0.`", "0.024525`", "0.`"},
     {
      RowBox[{"-", 
       FractionBox["1", "200"]}], "0.`", 
      RowBox[{"-", "0.0367875`"}], "0.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.6059770052795143`*^9, 3.605977041712152*^9}, 
   3.6059773193068743`*^9, {3.605977840470057*^9, 3.6059778722329817`*^9}, 
   3.605984748479261*^9, 3.605985704767682*^9, 3.606056177076964*^9, 
   3.6060562236689672`*^9, 3.606060843159679*^9, 3.606061170476179*^9, 
   3.6060623973320637`*^9, 3.606064765708461*^9, 3.606065236843131*^9, {
   3.606065275558234*^9, 3.6060653017589293`*^9}, 3.6060664423671007`*^9, 
   3.606082602750154*^9, 3.606082634870969*^9, 3.606082673773878*^9, 
   3.606083150153945*^9, {3.606083208788673*^9, 3.60608322446603*^9}, {
   3.60608327111294*^9, 3.60608329112847*^9}, 3.606083328387286*^9, {
   3.606083411668973*^9, 3.606083424575499*^9}, {3.60608347346379*^9, 
   3.606083526452091*^9}, 3.606083686720849*^9, 3.606083833837515*^9, {
   3.606132914400895*^9, 3.6061329572749567`*^9}, 3.606132999416477*^9, 
   3.606134988387838*^9, 3.606333625109864*^9, 3.6063337308863907`*^9, 
   3.606334101195919*^9, 3.606334426002379*^9, 3.6063349591506977`*^9, 
   3.6063351174755793`*^9, 3.606335402621377*^9, 3.6065893091295643`*^9, 
   3.606589784743383*^9, 3.606589951912591*^9, {3.6065900170063143`*^9, 
   3.6065900409695044`*^9}, 3.606590298263339*^9, 3.606590372681909*^9, 
   3.606590431823204*^9, 3.606590835041798*^9, 3.6065908816137657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Matrix", " ", "Rank", " ", "of", " ", "Q"}], " ", "=", " ", 
     "N"}], ",", " ", 
    RowBox[{
    "so", " ", "the", " ", "system", " ", "is", " ", "controllable"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"MatrixRank", "[", "Q", "]"}]}]], "Input",
 CellChangeTimes->{{3.605978044776095*^9, 3.605978089354352*^9}, {
  3.605985767487543*^9, 3.6059857680958652`*^9}, {3.60598580916875*^9, 
  3.605985810656893*^9}}],

Cell[BoxData[
 FormBox["4", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.605978048001526*^9, 3.605984748988936*^9, {3.605985765475752*^9, 
   3.6059857694814253`*^9}, 3.605985812047233*^9, 3.606056177274412*^9, 
   3.606060843391005*^9, 3.606061179089579*^9, 3.6060623975291348`*^9, 
   3.606064765941943*^9, 3.606065237057177*^9, {3.6060652757830687`*^9, 
   3.60606530198254*^9}, 3.606066442710498*^9, 3.6060826029450083`*^9, 
   3.606082635132267*^9, 3.6060826740185347`*^9, 3.606083150385635*^9, {
   3.6060832090980997`*^9, 3.606083224725856*^9}, {3.6060832713061543`*^9, 
   3.606083291396947*^9}, {3.6060834117260427`*^9, 3.606083424623921*^9}, {
   3.606083473525629*^9, 3.606083526511297*^9}, 3.606083686786042*^9, 
   3.606083833884954*^9, {3.606132914454763*^9, 3.606132957324258*^9}, 
   3.606132999467667*^9, 3.6061349884528303`*^9, 3.606333733646443*^9, 
   3.6063341030570107`*^9, 3.606334426065366*^9, 3.606334959197975*^9, 
   3.606335117524128*^9, 3.606335402669455*^9, 3.606589309181677*^9, 
   3.606589784789456*^9, 3.606589951964834*^9, {3.6065900170500507`*^9, 
   3.606590041016776*^9}, 3.606590298307295*^9, 3.606590372731008*^9, 
   3.606590431871142*^9, 3.606590835085208*^9, 3.606590881658217*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"T1", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ".", 
   RowBox[{"Inverse", "[", "Q", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"T", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"{", "T1", "}"}], "]"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{"T1", ".", "A"}], "}"}], "]"}], ",", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{"T1", ".", "A", ".", "A"}], "}"}], "]"}], ",", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{"T1", ".", "A", ".", "A", ".", "A"}], "}"}], "]"}]}], 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.606056164767975*^9, 3.606056169191308*^9}, {
  3.6060833415607986`*^9, 3.606083399998064*^9}, {3.606333746656782*^9, 
  3.606333785104004*^9}, {3.6063340126117287`*^9, 3.606334049863536*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "20.387359836901123`"}], ",", 
    RowBox[{"-", "40.774719673802245`"}], ",", "0.`", ",", "0.`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.606333765738956*^9, 3.6063337858578863`*^9}, {
   3.606334016094467*^9, 3.606334050307399*^9}, 3.606334104668281*^9, 
   3.606334426114006*^9, 3.606334959244979*^9, 3.606335117574251*^9, 
   3.606335402768529*^9, 3.6065893092270937`*^9, 3.6065897848378363`*^9, 
   3.606589952010634*^9, {3.606590017103788*^9, 3.606590041065866*^9}, 
   3.606590298362035*^9, 3.606590372781165*^9, 3.606590431920226*^9, 
   3.6065908351386766`*^9, 3.606590881706853*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "20.387359836901123`"}], 
      RowBox[{"-", "40.774719673802245`"}], "0.`", "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "20.387359836901123`"}], 
      RowBox[{"-", "40.774719673802245`"}]},
     {"0.`", 
      RowBox[{"-", "200.`"}], "0.`", "0.`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "200.`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.606333765738956*^9, 3.6063337858578863`*^9}, {
   3.606334016094467*^9, 3.606334050307399*^9}, 3.606334104668281*^9, 
   3.606334426114006*^9, 3.606334959244979*^9, 3.606335117574251*^9, 
   3.606335402768529*^9, 3.6065893092270937`*^9, 3.6065897848378363`*^9, 
   3.606589952010634*^9, {3.606590017103788*^9, 3.606590041065866*^9}, 
   3.606590298362035*^9, 3.606590372781165*^9, 3.606590431920226*^9, 
   3.6065908351386766`*^9, 3.6065908817110558`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A1", " ", "=", " ", 
  RowBox[{"T", ".", "A", ".", 
   RowBox[{"Inverse", "[", "T", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"B1", " ", "=", " ", 
  RowBox[{"T", ".", "B"}]}]}], "Input",
 CellChangeTimes->{{3.6063340559204283`*^9, 3.6063340722300243`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "1.`", "0.`", "0.`"},
     {"0.`", "0.`", "1.`", "0.`"},
     {"0.`", "0.`", "0.`", "1.`"},
     {"0.`", "0.`", "7.3575`", "0.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606056265175099*^9, 3.606060843541044*^9, 3.606061183993815*^9, 
   3.606062397675848*^9, 3.606064766092329*^9, 3.606065237237586*^9, {
   3.606065275965867*^9, 3.606065302151464*^9}, 3.606066443157941*^9, 
   3.6060826031419783`*^9, 3.606082635328134*^9, 3.6060826743634653`*^9, 
   3.606083150578478*^9, {3.606083209438593*^9, 3.6060832249223623`*^9}, {
   3.606083271469079*^9, 3.606083291580761*^9}, {3.6060834048877497`*^9, 
   3.606083424751417*^9}, {3.606083473658527*^9, 3.606083526665275*^9}, 
   3.606083686912929*^9, 3.6060838339996223`*^9, {3.606132914590272*^9, 
   3.6061329574429293`*^9}, 3.606132999569414*^9, 3.606134988584124*^9, 
   3.606333814201662*^9, {3.6063340537729263`*^9, 3.606334058219268*^9}, 
   3.6063341065389013`*^9, 3.606334426192602*^9, 3.606334959508089*^9, 
   3.6063351178668747`*^9, 3.606335402819211*^9, 3.606589309277658*^9, 
   3.606589784887134*^9, 3.606589952058722*^9, {3.606590017149312*^9, 
   3.606590041115316*^9}, 3.606590298440155*^9, 3.6065903728291283`*^9, 
   3.606590431973218*^9, 3.606590835183316*^9, 3.6065908817569647`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`"},
     {"0.`"},
     {"0.`"},
     {"1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606056265175099*^9, 3.606060843541044*^9, 3.606061183993815*^9, 
   3.606062397675848*^9, 3.606064766092329*^9, 3.606065237237586*^9, {
   3.606065275965867*^9, 3.606065302151464*^9}, 3.606066443157941*^9, 
   3.6060826031419783`*^9, 3.606082635328134*^9, 3.6060826743634653`*^9, 
   3.606083150578478*^9, {3.606083209438593*^9, 3.6060832249223623`*^9}, {
   3.606083271469079*^9, 3.606083291580761*^9}, {3.6060834048877497`*^9, 
   3.606083424751417*^9}, {3.606083473658527*^9, 3.606083526665275*^9}, 
   3.606083686912929*^9, 3.6060838339996223`*^9, {3.606132914590272*^9, 
   3.6061329574429293`*^9}, 3.606132999569414*^9, 3.606134988584124*^9, 
   3.606333814201662*^9, {3.6063340537729263`*^9, 3.606334058219268*^9}, 
   3.6063341065389013`*^9, 3.606334426192602*^9, 3.606334959508089*^9, 
   3.6063351178668747`*^9, 3.606335402819211*^9, 3.606589309277658*^9, 
   3.606589784887134*^9, 3.606589952058722*^9, {3.606590017149312*^9, 
   3.606590041115316*^9}, 3.606590298440155*^9, 3.6065903728291283`*^9, 
   3.606590431973218*^9, 3.606590835183316*^9, 3.606590881761133*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"gz", ",", "bg"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gz", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"gz", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B1Gz", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"bg", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"bg", "[", 
      RowBox[{"i", ",", "j"}], "]"}], "=", 
     RowBox[{
      RowBox[{"B1", "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", 
      RowBox[{"gz", "[", "j", "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "B1Gz"}], "Input",
 CellChangeTimes->{{3.6060562752092113`*^9, 3.6060562839009867`*^9}, {
  3.606333828683878*^9, 3.60633383467694*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", "0.`", "}"}], 
      RowBox[{"{", "0.`", "}"}], 
      RowBox[{"{", "0.`", "}"}], 
      RowBox[{"{", "0.`", "}"}]},
     {
      RowBox[{"{", "0.`", "}"}], 
      RowBox[{"{", "0.`", "}"}], 
      RowBox[{"{", "0.`", "}"}], 
      RowBox[{"{", "0.`", "}"}]},
     {
      RowBox[{"{", "0.`", "}"}], 
      RowBox[{"{", "0.`", "}"}], 
      RowBox[{"{", "0.`", "}"}], 
      RowBox[{"{", "0.`", "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"1.`", " ", 
        RowBox[{"gz", "(", "1", ")"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{"1.`", " ", 
        RowBox[{"gz", "(", "2", ")"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{"1.`", " ", 
        RowBox[{"gz", "(", "3", ")"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{"1.`", " ", 
        RowBox[{"gz", "(", "4", ")"}]}], "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.60605627273417*^9, 3.606056284433735*^9}, 
   3.606060843586008*^9, 3.606061185848585*^9, 3.6060623977246323`*^9, 
   3.606064766158662*^9, 3.606065237288506*^9, {3.6060652761926527`*^9, 
   3.6060653022183104`*^9}, 3.6060664432180233`*^9, 3.606082603288813*^9, 
   3.606082635411302*^9, 3.6060826744281893`*^9, 3.6060831506273127`*^9, {
   3.6060832095076637`*^9, 3.606083224991591*^9}, {3.606083271523737*^9, 
   3.606083291646923*^9}, {3.606083411888555*^9, 3.606083424819446*^9}, {
   3.6060834737258873`*^9, 3.606083526739023*^9}, 3.606083687033526*^9, 
   3.606083834061283*^9, {3.6061329146312523`*^9, 3.60613295749231*^9}, 
   3.606132999631494*^9, 3.6061349886492977`*^9, 3.606333835291774*^9, 
   3.606334112505665*^9, 3.6063344262680693`*^9, 3.606334959577407*^9, 
   3.60633511792163*^9, 3.6063354028894567`*^9, 3.606589309326057*^9, 
   3.606589784936377*^9, 3.6065899521160727`*^9, {3.606590017198662*^9, 
   3.60659004116402*^9}, 3.606590298524787*^9, 3.606590372880089*^9, 
   3.606590432022122*^9, 3.606590835238674*^9, 3.606590881806079*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"B1Gz", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"gz", "[", "1", "]"}], ",", 
      RowBox[{"gz", "[", "2", "]"}], ",", 
      RowBox[{"gz", "[", "3", "]"}], ",", " ", 
      RowBox[{"gz", "[", "4", "]"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.606056303468852*^9, 3.6060563106280003`*^9}, {
  3.606333856755157*^9, 3.6063338721389503`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {
      RowBox[{"gz", "(", "1", ")"}], 
      RowBox[{"gz", "(", "2", ")"}], 
      RowBox[{"gz", "(", "3", ")"}], 
      RowBox[{"gz", "(", "4", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606056311304682*^9, 3.606060843637618*^9, 3.6060611873287497`*^9, 
   3.606062397772647*^9, 3.606064766208934*^9, 3.6060652373429403`*^9, {
   3.606065276243429*^9, 3.6060653024061413`*^9}, 3.606066443266429*^9, 
   3.606082603502653*^9, 3.606082635591569*^9, 3.6060826744748087`*^9, 
   3.6060831508061047`*^9, {3.60608320957263*^9, 3.606083225216332*^9}, {
   3.606083271694655*^9, 3.6060832919705477`*^9}, {3.606083412069583*^9, 
   3.606083424863291*^9}, {3.606083473782509*^9, 3.60608352680546*^9}, 
   3.606083687090987*^9, 3.6060838341111307`*^9, {3.606132914676422*^9, 
   3.60613295754065*^9}, 3.606132999681307*^9, 3.6061349886916656`*^9, 
   3.6063338732445507`*^9, 3.606334116379354*^9, 3.6063344264743557`*^9, 
   3.606334959664588*^9, 3.606335117986758*^9, 3.6063354030755444`*^9, 
   3.606589309373506*^9, 3.606589784990673*^9, 3.606589952156734*^9, {
   3.6065900172514772`*^9, 3.606590041213559*^9}, 3.6065902985687017`*^9, 
   3.606590372927252*^9, 3.606590432069035*^9, 3.6065908353032084`*^9, 
   3.606590881854974*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A1star", "=", 
  RowBox[{"A1", "-", "B1Gz"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "1.`", "0.`", "0.`"},
     {"0.`", "0.`", "1.`", "0.`"},
     {"0.`", "0.`", "0.`", "1.`"},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"gz", "(", "1", ")"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"gz", "(", "2", ")"}]}], 
      RowBox[{"7.3575`", "\[VeryThinSpace]", "-", 
       RowBox[{"gz", "(", "3", ")"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"gz", "(", "4", ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606056315326746*^9, 3.606060843687529*^9, 3.606061189584681*^9, 
   3.6060623978216543`*^9, 3.606064766394186*^9, 3.606065237529098*^9, {
   3.606065276285859*^9, 3.606065302456718*^9}, 3.6060664433087597`*^9, 
   3.6060826035695343`*^9, 3.606082635654706*^9, 3.606082674544046*^9, 
   3.606083150856089*^9, {3.606083209619979*^9, 3.606083225264657*^9}, {
   3.606083271750474*^9, 3.606083292039709*^9}, {3.606083412117198*^9, 
   3.606083424922155*^9}, {3.606083473842215*^9, 3.606083527068338*^9}, 
   3.606083687139183*^9, 3.606083834162621*^9, {3.6061329147266293`*^9, 
   3.6061329575847692`*^9}, 3.6061329997274647`*^9, 3.606134988887248*^9, 
   3.606333894958845*^9, 3.6063341203021107`*^9, 3.606334426522534*^9, 
   3.606334959724154*^9, 3.606335118055725*^9, 3.606335403124054*^9, 
   3.606589309427636*^9, 3.606589785034108*^9, 3.6065899522099*^9, {
   3.606590017296089*^9, 3.6065900412621*^9}, 3.606590298714562*^9, 
   3.606590372981491*^9, 3.606590432117689*^9, 3.606590835351426*^9, 
   3.6065908819036827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M1star", "=", 
   RowBox[{
    RowBox[{"s", " ", 
     RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "-", "A1star"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"cpz", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Det", "[", "M1star", "]"}], ",", "s", ",", "Simplify"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6060563241269836`*^9, 3.606056324212618*^9}, {
  3.606083884088964*^9, 3.6060838887014914`*^9}, {3.6063341253516397`*^9, 
  3.606334125669656*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"gz", "(", "4", ")"}], " ", 
    SuperscriptBox["s", "3"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1.`", " ", 
       RowBox[{"gz", "(", "3", ")"}]}], "-", "7.3575`"}], ")"}], " ", 
    SuperscriptBox["s", "2"]}], "+", 
   RowBox[{"1.`", " ", 
    RowBox[{"gz", "(", "2", ")"}], " ", "s"}], "+", 
   RowBox[{"1.`", " ", 
    RowBox[{"gz", "(", "1", ")"}]}], "+", 
   SuperscriptBox["s", "4"], "+", "0.`"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.60605632067457*^9, 3.606056324628907*^9}, 
   3.60606084386331*^9, 3.606061191251699*^9, 3.6060623978701982`*^9, 
   3.606064766447936*^9, 3.606065237580285*^9, {3.606065276334785*^9, 
   3.60606530250539*^9}, 3.606066443362287*^9, 3.606082603615242*^9, 
   3.606082635716195*^9, 3.60608267460599*^9, 3.606083150923318*^9, {
   3.6060832096870613`*^9, 3.6060832253320704`*^9}, {3.606083271795784*^9, 
   3.606083292088642*^9}, {3.6060834121623363`*^9, 3.606083425018054*^9}, {
   3.606083474038003*^9, 3.60608352716394*^9}, 3.6060836873092747`*^9, 
   3.606083834228477*^9, {3.606083884618473*^9, 3.6060838891441402`*^9}, {
   3.606132914774414*^9, 3.60613295763463*^9}, 3.6061329997753677`*^9, 
   3.606134988936927*^9, {3.606334122668054*^9, 3.606334126187587*^9}, 
   3.606334426588048*^9, 3.6063349597878113`*^9, 3.606335118128002*^9, 
   3.6063354031897287`*^9, 3.606589309554008*^9, 3.6065897850854683`*^9, 
   3.6065899523077908`*^9, {3.606590017348814*^9, 3.606590041310326*^9}, 
   3.606590298764748*^9, 3.606590373115631*^9, 3.606590432265394*^9, 
   3.606590835393568*^9, 3.606590881952775*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cp0", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "-", "s1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"s", "-", "s2"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"s", "-", "s3"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"s", "-", "s4"}], ")"}]}], ",", "s", ",", "Simplify"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6060563310126667`*^9, 3.606056331932748*^9}, {
  3.606334130773553*^9, 3.606334134005741*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["s", "4"], "+", 
   RowBox[{
    SuperscriptBox["s", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "s1"}], "-", "s2", "-", "s3", "-", "s4"}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["s", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"s1", " ", 
       RowBox[{"(", 
        RowBox[{"s2", "+", "s3", "+", "s4"}], ")"}]}], "+", 
      RowBox[{"s2", " ", 
       RowBox[{"(", 
        RowBox[{"s3", "+", "s4"}], ")"}]}], "+", 
      RowBox[{"s3", " ", "s4"}]}], ")"}]}], "+", 
   RowBox[{"s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"s1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"s2", " ", 
           RowBox[{"(", 
            RowBox[{"s3", "+", "s4"}], ")"}]}], "+", 
          RowBox[{"s3", " ", "s4"}]}], ")"}]}]}], "-", 
      RowBox[{"s2", " ", "s3", " ", "s4"}]}], ")"}]}], "+", 
   RowBox[{"s1", " ", "s2", " ", "s3", " ", "s4"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606056332702385*^9, 3.606060843913457*^9, 3.606061193033492*^9, 
   3.6060623979193583`*^9, 3.606064766495762*^9, 3.606065237630376*^9, {
   3.606065276384364*^9, 3.606065302553887*^9}, 3.60606644340702*^9, 
   3.606082603679433*^9, 3.606082635767023*^9, 3.6060826746550922`*^9, 
   3.6060831510341*^9, {3.606083209751658*^9, 3.606083225394924*^9}, {
   3.606083271865346*^9, 3.606083292152914*^9}, {3.60608341234759*^9, 
   3.6060834252161016`*^9}, {3.606083474081221*^9, 3.606083527230961*^9}, 
   3.606083687385686*^9, 3.606083834293232*^9, {3.6061329149206553`*^9, 
   3.606132957704072*^9}, 3.606132999846076*^9, 3.606134988989255*^9, 
   3.606334134521183*^9, 3.6063344266838713`*^9, 3.606334959881193*^9, 
   3.606335118223536*^9, 3.606335403290662*^9, 3.6065893096324463`*^9, 
   3.606589785239662*^9, 3.6065899525762873`*^9, {3.6065900174155912`*^9, 
   3.606590041502366*^9}, 3.6065902988472548`*^9, 3.606590373179998*^9, 
   3.606590432336742*^9, 3.606590835587224*^9, 3.6065908821360073`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"g1", "=", 
  RowBox[{
   RowBox[{"Coefficient", "[", 
    RowBox[{"cpz", ",", "s", ",", "3"}], "]"}], "-", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"cp0", ",", "s", ",", "3"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"g2", "=", 
  RowBox[{
   RowBox[{"Coefficient", "[", 
    RowBox[{"cpz", ",", "s", ",", "2"}], "]"}], "-", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"cp0", ",", "s", ",", "2"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"g3", "=", 
  RowBox[{
   RowBox[{"Coefficient", "[", 
    RowBox[{"cpz", ",", "s", ",", "1"}], "]"}], "-", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"cp0", ",", "s", ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"g4", "=", 
  RowBox[{
   RowBox[{"Coefficient", "[", 
    RowBox[{"cpz", ",", "s", ",", "0"}], "]"}], "-", 
   RowBox[{"Coefficient", "[", 
    RowBox[{"cp0", ",", "s", ",", "0"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.606056339564549*^9, 3.606056346556467*^9}, {
  3.6063341398769608`*^9, 3.606334151038828*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"gz", "(", "4", ")"}], "+", "s1", "+", "s2", "+", "s3", "+", 
   "s4"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606056347121944*^9, 3.6060608439615307`*^9, 3.606061194276247*^9, 
   3.606062398088585*^9, 3.6060647665453377`*^9, 3.60606523768401*^9, {
   3.606065276433906*^9, 3.6060653026032877`*^9}, 3.606066443461583*^9, 
   3.6060826037249203`*^9, 3.606082635812454*^9, 3.606082674699813*^9, 
   3.606083151163525*^9, {3.6060832098172626`*^9, 3.60608322544298*^9}, {
   3.606083271909952*^9, 3.606083292218581*^9}, {3.606083412394279*^9, 
   3.6060834252727737`*^9}, {3.606083474129984*^9, 3.606083527295011*^9}, 
   3.606083687455092*^9, 3.6060838346081867`*^9, {3.6061329150859632`*^9, 
   3.6061329577482347`*^9}, 3.606132999889703*^9, 3.606134989039064*^9, 
   3.6063341517544203`*^9, 3.606334426734243*^9, 3.6063349599511557`*^9, 
   3.606335118281701*^9, 3.606335403373826*^9, 3.6065893096738253`*^9, 
   3.606589785277831*^9, 3.606589952617927*^9, {3.6065900175576553`*^9, 
   3.606590041561298*^9}, 3.606590298898952*^9, 3.6065903732226057`*^9, 
   3.606590432387397*^9, 3.6065908356272173`*^9, 3.60659088219628*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"1.`", " ", 
    RowBox[{"gz", "(", "3", ")"}]}], "-", 
   RowBox[{"s1", " ", 
    RowBox[{"(", 
     RowBox[{"s2", "+", "s3", "+", "s4"}], ")"}]}], "-", 
   RowBox[{"s2", " ", 
    RowBox[{"(", 
     RowBox[{"s3", "+", "s4"}], ")"}]}], "-", 
   RowBox[{"s3", " ", "s4"}], "-", "7.3575`"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606056347121944*^9, 3.6060608439615307`*^9, 3.606061194276247*^9, 
   3.606062398088585*^9, 3.6060647665453377`*^9, 3.60606523768401*^9, {
   3.606065276433906*^9, 3.6060653026032877`*^9}, 3.606066443461583*^9, 
   3.6060826037249203`*^9, 3.606082635812454*^9, 3.606082674699813*^9, 
   3.606083151163525*^9, {3.6060832098172626`*^9, 3.60608322544298*^9}, {
   3.606083271909952*^9, 3.606083292218581*^9}, {3.606083412394279*^9, 
   3.6060834252727737`*^9}, {3.606083474129984*^9, 3.606083527295011*^9}, 
   3.606083687455092*^9, 3.6060838346081867`*^9, {3.6061329150859632`*^9, 
   3.6061329577482347`*^9}, 3.606132999889703*^9, 3.606134989039064*^9, 
   3.6063341517544203`*^9, 3.606334426734243*^9, 3.6063349599511557`*^9, 
   3.606335118281701*^9, 3.606335403373826*^9, 3.6065893096738253`*^9, 
   3.606589785277831*^9, 3.606589952617927*^9, {3.6065900175576553`*^9, 
   3.606590041561298*^9}, 3.606590298898952*^9, 3.6065903732226057`*^9, 
   3.606590432387397*^9, 3.6065908356272173`*^9, 3.606590882246689*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"1.`", " ", 
    RowBox[{"gz", "(", "2", ")"}]}], "+", 
   RowBox[{"s1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"s2", " ", 
       RowBox[{"(", 
        RowBox[{"s3", "+", "s4"}], ")"}]}], "+", 
      RowBox[{"s3", " ", "s4"}]}], ")"}]}], "+", 
   RowBox[{"s2", " ", "s3", " ", "s4"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606056347121944*^9, 3.6060608439615307`*^9, 3.606061194276247*^9, 
   3.606062398088585*^9, 3.6060647665453377`*^9, 3.60606523768401*^9, {
   3.606065276433906*^9, 3.6060653026032877`*^9}, 3.606066443461583*^9, 
   3.6060826037249203`*^9, 3.606082635812454*^9, 3.606082674699813*^9, 
   3.606083151163525*^9, {3.6060832098172626`*^9, 3.60608322544298*^9}, {
   3.606083271909952*^9, 3.606083292218581*^9}, {3.606083412394279*^9, 
   3.6060834252727737`*^9}, {3.606083474129984*^9, 3.606083527295011*^9}, 
   3.606083687455092*^9, 3.6060838346081867`*^9, {3.6061329150859632`*^9, 
   3.6061329577482347`*^9}, 3.606132999889703*^9, 3.606134989039064*^9, 
   3.6063341517544203`*^9, 3.606334426734243*^9, 3.6063349599511557`*^9, 
   3.606335118281701*^9, 3.606335403373826*^9, 3.6065893096738253`*^9, 
   3.606589785277831*^9, 3.606589952617927*^9, {3.6065900175576553`*^9, 
   3.606590041561298*^9}, 3.606590298898952*^9, 3.6065903732226057`*^9, 
   3.606590432387397*^9, 3.6065908356272173`*^9, 3.606590882249696*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"1.`", " ", 
    RowBox[{"gz", "(", "1", ")"}]}], "-", 
   RowBox[{"s1", " ", "s2", " ", "s3", " ", "s4"}], "+", "0.`"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606056347121944*^9, 3.6060608439615307`*^9, 3.606061194276247*^9, 
   3.606062398088585*^9, 3.6060647665453377`*^9, 3.60606523768401*^9, {
   3.606065276433906*^9, 3.6060653026032877`*^9}, 3.606066443461583*^9, 
   3.6060826037249203`*^9, 3.606082635812454*^9, 3.606082674699813*^9, 
   3.606083151163525*^9, {3.6060832098172626`*^9, 3.60608322544298*^9}, {
   3.606083271909952*^9, 3.606083292218581*^9}, {3.606083412394279*^9, 
   3.6060834252727737`*^9}, {3.606083474129984*^9, 3.606083527295011*^9}, 
   3.606083687455092*^9, 3.6060838346081867`*^9, {3.6061329150859632`*^9, 
   3.6061329577482347`*^9}, 3.606132999889703*^9, 3.606134989039064*^9, 
   3.6063341517544203`*^9, 3.606334426734243*^9, 3.6063349599511557`*^9, 
   3.606335118281701*^9, 3.606335403373826*^9, 3.6065893096738253`*^9, 
   3.606589785277831*^9, 3.606589952617927*^9, {3.6065900175576553`*^9, 
   3.606590041561298*^9}, 3.606590298898952*^9, 3.6065903732226057`*^9, 
   3.606590432387397*^9, 3.6065908356272173`*^9, 3.606590882252466*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"gz", ",", "s1", ",", "s2", ",", "s3", ",", "s4"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g1", "\[Equal]", "0"}], ",", 
      RowBox[{"g2", "\[Equal]", "0"}], ",", " ", 
      RowBox[{"g3", "\[Equal]", "0"}], ",", 
      RowBox[{"g4", "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"gz", "[", "1", "]"}], ",", 
      RowBox[{"gz", "[", "2", "]"}], ",", 
      RowBox[{"gz", "[", "3", "]"}], ",", 
      RowBox[{"gz", "[", "4", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"gz", "[", "1", "]"}], ",", 
     RowBox[{"gz", "[", "2", "]"}], ",", 
     RowBox[{"gz", "[", "3", "]"}], ",", 
     RowBox[{"gz", "[", "4", "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"gz", "[", "1", "]"}], ",", 
      RowBox[{"gz", "[", "2", "]"}], ",", 
      RowBox[{"gz", "[", "3", "]"}], ",", 
      RowBox[{"gz", "[", "4", "]"}]}], "}"}], "/.", 
    RowBox[{"%", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"zgains", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"gz", "[", "1", "]"}], ",", 
    RowBox[{"gz", "[", "2", "]"}], ",", 
    RowBox[{"gz", "[", "3", "]"}], ",", 
    RowBox[{"gz", "[", "4", "]"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.60605636666291*^9, 3.606056380179535*^9}, {
  3.6063341559020367`*^9, 3.606334189191099*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"1.`", " ", "s1", " ", "s2", " ", "s3", " ", "s4"}], "+", 
     "0.`"}], ",", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"s1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"s2", " ", 
          RowBox[{"(", 
           RowBox[{"s3", "+", "s4"}], ")"}]}], "+", 
         RowBox[{"s3", " ", "s4"}]}], ")"}]}]}], "-", 
     RowBox[{"s2", " ", "s3", " ", "s4"}]}], ",", 
    RowBox[{
     RowBox[{"1.`", " ", "s1", " ", 
      RowBox[{"(", 
       RowBox[{"s2", "+", "s3", "+", "s4"}], ")"}]}], "+", 
     RowBox[{"1.`", " ", "s2", " ", 
      RowBox[{"(", 
       RowBox[{"s3", "+", "s4"}], ")"}]}], "+", 
     RowBox[{"1.`", " ", "s3", " ", "s4"}], "+", "7.3575`"}], ",", 
    RowBox[{
     RowBox[{"-", "s1"}], "-", "s2", "-", "s3", "-", "s4"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.60605638071146*^9, 3.606060844010316*^9, 3.606061196646738*^9, 
   3.60606239813619*^9, 3.606064766597762*^9, 3.606065237742857*^9, {
   3.6060652764819603`*^9, 3.60606530265203*^9}, 3.6060664435260067`*^9, 
   3.606082603793923*^9, 3.606082635860004*^9, 3.606082674752797*^9, 
   3.606083151263152*^9, {3.606083209881946*^9, 3.606083225513257*^9}, {
   3.606083271979783*^9, 3.606083292283946*^9}, {3.60608341246275*^9, 
   3.606083425328148*^9}, {3.6060834741992292`*^9, 3.60608352738234*^9}, 
   3.606083687536332*^9, 3.6060838346706047`*^9, {3.6061329151372223`*^9, 
   3.606132957797183*^9}, 3.606133000300522*^9, 3.606134989090198*^9, 
   3.6063341922007437`*^9, 3.606334426800288*^9, 3.606334960092173*^9, 
   3.606335118457068*^9, 3.606335403514579*^9, 3.6065893097701063`*^9, 
   3.6065897853266163`*^9, 3.606589952744493*^9, {3.606590017660046*^9, 
   3.6065900416205063`*^9}, 3.606590298960485*^9, 3.606590373274279*^9, 
   3.6065904325053997`*^9, 3.6065908356762047`*^9, 3.606590882298316*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Check", " ", "that", " ", "gains", " ", "with", " ", "original", " ", 
     "eigenvalues", " ", "are", " ", "0"}], ",", " ", 
    RowBox[{"as", " ", "expected"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", "s2", ",", "s3", ",", "s4"}], "}"}], "=", 
     RowBox[{"Eigenvalues", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Chop", "[", "zgains", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.606056388444345*^9, 3.6060563896177883`*^9}, {
  3.606134967890007*^9, 3.6061349834642887`*^9}, {3.6063341952600203`*^9, 
  3.606334196596094*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606056390077888*^9, 3.6060608440606194`*^9, 3.606061197904313*^9, 
   3.606062398183969*^9, 3.6060647666479673`*^9, 3.606065237791548*^9, {
   3.606065276531499*^9, 3.60606530270059*^9}, 3.6060664435920477`*^9, 
   3.606082603837182*^9, 3.606082635914302*^9, 3.606082674797896*^9, 
   3.6060831513069696`*^9, {3.606083209930477*^9, 3.6060832255752697`*^9}, {
   3.606083272031111*^9, 3.606083292333119*^9}, {3.6060834125258703`*^9, 
   3.606083425391591*^9}, {3.6060834742436523`*^9, 3.60608352745761*^9}, 
   3.606083687602775*^9, 3.6060838347343597`*^9, {3.606132915213293*^9, 
   3.6061329578460817`*^9}, 3.606133000379428*^9, 3.606134989140956*^9, 
   3.606334197096931*^9, 3.6063344268471327`*^9, 3.606334960177875*^9, 
   3.606335118554871*^9, 3.60633540358208*^9, 3.6065893098163652`*^9, 
   3.606589785378627*^9, 3.60658995279424*^9, {3.6065900177083483`*^9, 
   3.606590041672777*^9}, 3.6065902990093107`*^9, 3.60659037335063*^9, 
   3.6065904325455437`*^9, 3.60659083572121*^9, 3.6065908823427*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"s1", ",", "s2", ",", "s3", ",", "s4"}], 
  "]"}], "\[IndentingNewLine]", "zgains", "\[IndentingNewLine]", 
 RowBox[{"xgains", "=", 
  RowBox[{"(", 
   RowBox[{"zgains", ".", "T"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.606056395548769*^9, 3.606056395745246*^9}, {
  3.606334200269911*^9, 3.606334201219692*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"1.`", " ", "s1", " ", "s2", " ", "s3", " ", "s4"}], "+", 
     "0.`"}], ",", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"s1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"s2", " ", 
          RowBox[{"(", 
           RowBox[{"s3", "+", "s4"}], ")"}]}], "+", 
         RowBox[{"s3", " ", "s4"}]}], ")"}]}]}], "-", 
     RowBox[{"s2", " ", "s3", " ", "s4"}]}], ",", 
    RowBox[{
     RowBox[{"1.`", " ", "s1", " ", 
      RowBox[{"(", 
       RowBox[{"s2", "+", "s3", "+", "s4"}], ")"}]}], "+", 
     RowBox[{"1.`", " ", "s2", " ", 
      RowBox[{"(", 
       RowBox[{"s3", "+", "s4"}], ")"}]}], "+", 
     RowBox[{"1.`", " ", "s3", " ", "s4"}], "+", "7.3575`"}], ",", 
    RowBox[{
     RowBox[{"-", "s1"}], "-", "s2", "-", "s3", "-", "s4"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606056396257104*^9, 3.606060844108624*^9, 3.606061199116514*^9, 
   3.6060623982303143`*^9, 3.606064766714116*^9, 3.606065237843292*^9, {
   3.606065276579794*^9, 3.6060653027503023`*^9}, 3.6060664437538557`*^9, 
   3.606082603909298*^9, 3.606082635976097*^9, 3.606082674866502*^9, 
   3.6060831513899717`*^9, {3.606083209980781*^9, 3.606083225664666*^9}, {
   3.6060832721048603`*^9, 3.606083292399869*^9}, {3.606083412594057*^9, 
   3.606083425450534*^9}, {3.60608347429377*^9, 3.606083527539073*^9}, 
   3.606083687653627*^9, 3.606083834799674*^9, {3.6061329152689257`*^9, 
   3.606132958041628*^9}, 3.606133000428563*^9, 3.606134989198151*^9, 
   3.606334201982573*^9, 3.6063344270084267`*^9, 3.606334960226531*^9, 
   3.606335118617597*^9, 3.606335403656877*^9, 3.606589309867682*^9, 
   3.6065897854244633`*^9, 3.6065899528433657`*^9, {3.606590017754017*^9, 
   3.6065900417220984`*^9}, 3.6065902990589037`*^9, 3.60659037338805*^9, 
   3.606590432597208*^9, 3.6065908357747593`*^9, 3.606590882429903*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"0.`", "\[VeryThinSpace]", "-", 
     RowBox[{"20.387359836901123`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1.`", " ", "s1", " ", "s2", " ", "s3", " ", "s4"}], "+", 
        "0.`"}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"40.774719673802245`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1.`", " ", "s1", " ", "s2", " ", "s3", " ", "s4"}], "+", 
         "0.`"}], ")"}]}]}], "-", 
     RowBox[{"200.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1.`", " ", "s1", " ", 
         RowBox[{"(", 
          RowBox[{"s2", "+", "s3", "+", "s4"}], ")"}]}], "+", 
        RowBox[{"1.`", " ", "s2", " ", 
         RowBox[{"(", 
          RowBox[{"s3", "+", "s4"}], ")"}]}], "+", 
        RowBox[{"1.`", " ", "s3", " ", "s4"}], "+", "7.3575`"}], ")"}]}], "+",
      "0.`"}], ",", 
    RowBox[{"0.`", "\[VeryThinSpace]", "-", 
     RowBox[{"20.387359836901123`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"s1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s2", " ", 
             RowBox[{"(", 
              RowBox[{"s3", "+", "s4"}], ")"}]}], "+", 
            RowBox[{"s3", " ", "s4"}]}], ")"}]}]}], "-", 
        RowBox[{"s2", " ", "s3", " ", "s4"}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"200.`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "s1"}], "-", "s2", "-", "s3", "-", "s4"}], ")"}]}]}], 
     "-", 
     RowBox[{"40.774719673802245`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"s1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s2", " ", 
             RowBox[{"(", 
              RowBox[{"s3", "+", "s4"}], ")"}]}], "+", 
            RowBox[{"s3", " ", "s4"}]}], ")"}]}]}], "-", 
        RowBox[{"s2", " ", "s3", " ", "s4"}]}], ")"}]}], "+", "0.`"}]}], 
   "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606056396257104*^9, 3.606060844108624*^9, 3.606061199116514*^9, 
   3.6060623982303143`*^9, 3.606064766714116*^9, 3.606065237843292*^9, {
   3.606065276579794*^9, 3.6060653027503023`*^9}, 3.6060664437538557`*^9, 
   3.606082603909298*^9, 3.606082635976097*^9, 3.606082674866502*^9, 
   3.6060831513899717`*^9, {3.606083209980781*^9, 3.606083225664666*^9}, {
   3.6060832721048603`*^9, 3.606083292399869*^9}, {3.606083412594057*^9, 
   3.606083425450534*^9}, {3.60608347429377*^9, 3.606083527539073*^9}, 
   3.606083687653627*^9, 3.606083834799674*^9, {3.6061329152689257`*^9, 
   3.606132958041628*^9}, 3.606133000428563*^9, 3.606134989198151*^9, 
   3.606334201982573*^9, 3.6063344270084267`*^9, 3.606334960226531*^9, 
   3.606335118617597*^9, 3.606335403656877*^9, 3.606589309867682*^9, 
   3.6065897854244633`*^9, 3.6065899528433657`*^9, {3.606590017754017*^9, 
   3.6065900417220984`*^9}, 3.6065902990589037`*^9, 3.60659037338805*^9, 
   3.606590432597208*^9, 3.6065908357747593`*^9, 3.606590882496352*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Assume", " ", "all", " ", "poles", " ", "are", " ", "Butterworth", " ", 
    "Poles"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s1", ",", "s2", ",", "s3", ",", "s4"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.5877852522924731`"}], "+", 
       RowBox[{"I", " ", "0.8090169943749475`"}]}], ",", 
      RowBox[{
       RowBox[{"-", "0.9510565162951535`"}], "+", 
       RowBox[{"I", " ", "0.30901699437494745`"}]}], ",", 
      RowBox[{
       RowBox[{"-", "0.9510565162951535`"}], " ", "-", 
       RowBox[{"I", " ", "0.30901699437494745`"}]}], ",", 
      RowBox[{
       RowBox[{"-", "0.5877852522924731`"}], "-", 
       RowBox[{"I", " ", "0.8090169943749475`"}]}]}], "}"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.606056403444214*^9, 3.606056405578309*^9}, {
   3.6060652068630037`*^9, 3.606065208430176*^9}, {3.606065268230301*^9, 
   3.606065296196617*^9}, {3.606082596395609*^9, 3.606082628022539*^9}, {
   3.606082662821918*^9, 3.606082667357637*^9}, {3.60613495514589*^9, 
   3.606134962288671*^9}, {3.606334205501029*^9, 3.606334214147738*^9}, 
   3.60633433666145*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Chop", "[", "zgains", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", "xgains", "]"}]}], "Input",
 CellChangeTimes->{{3.606334348228133*^9, 3.606334371239538*^9}, {
  3.606334418368392*^9, 3.6063344203906307`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "1.`", ",", "3.077683537175253`", ",", "11.59356797749979`", ",", 
    "3.077683537175253`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606056411050928*^9, 3.606060844205995*^9, 3.6060612020579357`*^9, 
   3.60606239832861*^9, 3.606064766826394*^9, 3.60606523793812*^9, {
   3.606065276680193*^9, 3.606065302848763*^9}, 3.6060664441312103`*^9, 
   3.606082604005377*^9, 3.6060826360769*^9, 3.6060826749691887`*^9, 
   3.606083151492002*^9, {3.606083210094211*^9, 3.6060832257641897`*^9}, {
   3.606083272204777*^9, 3.606083292545085*^9}, {3.606083412705011*^9, 
   3.6060834255698433`*^9}, {3.606083474413066*^9, 3.606083527692177*^9}, 
   3.606083687780767*^9, 3.6060838349335012`*^9, {3.606132915362508*^9, 
   3.6061329581907473`*^9}, 3.606133000558929*^9, 3.606134989299354*^9, {
   3.606334340797596*^9, 3.606334371746426*^9}, 3.606334427214522*^9, 
   3.606334960553961*^9, 3.606335118952533*^9, 3.606335403810845*^9, 
   3.60658930999485*^9, 3.6065897855710583`*^9, 3.606589952974069*^9, {
   3.60659001788386*^9, 3.6065900418294163`*^9}, 3.606590299205278*^9, 
   3.6065903735304127`*^9, 3.606590432700857*^9, 3.6065908358818417`*^9, 
   3.6065908825563307`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "20.387359836901123`"}], ",", 
    RowBox[{"-", "2359.4883151737604`"}], ",", 
    RowBox[{"-", "62.74584173649854`"}], ",", 
    RowBox[{"-", "741.0283909080478`"}]}], "}"}], TraditionalForm]], "Output",\

 CellChangeTimes->{
  3.606056411050928*^9, 3.606060844205995*^9, 3.6060612020579357`*^9, 
   3.60606239832861*^9, 3.606064766826394*^9, 3.60606523793812*^9, {
   3.606065276680193*^9, 3.606065302848763*^9}, 3.6060664441312103`*^9, 
   3.606082604005377*^9, 3.6060826360769*^9, 3.6060826749691887`*^9, 
   3.606083151492002*^9, {3.606083210094211*^9, 3.6060832257641897`*^9}, {
   3.606083272204777*^9, 3.606083292545085*^9}, {3.606083412705011*^9, 
   3.6060834255698433`*^9}, {3.606083474413066*^9, 3.606083527692177*^9}, 
   3.606083687780767*^9, 3.6060838349335012`*^9, {3.606132915362508*^9, 
   3.6061329581907473`*^9}, 3.606133000558929*^9, 3.606134989299354*^9, {
   3.606334340797596*^9, 3.606334371746426*^9}, 3.606334427214522*^9, 
   3.606334960553961*^9, 3.606335118952533*^9, 3.606335403810845*^9, 
   3.60658930999485*^9, 3.6065897855710583`*^9, 3.606589952974069*^9, {
   3.60659001788386*^9, 3.6065900418294163`*^9}, 3.606590299205278*^9, 
   3.6065903735304127`*^9, 3.606590432700857*^9, 3.6065908358818417`*^9, 
   3.606590882559561*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Choose", " ", "state", " ", "vector"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "y", ",", " ", "\[Theta]", ",", " ", "yt", ",", " ", "\[Theta]t"}], 
    "}"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.606060802602228*^9, 3.6060608126948357`*^9}, {
  3.606134938443014*^9, 3.6061349387130823`*^9}, {3.606589639977866*^9, 
  3.6065896454733973`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["ytt"], "Input",
 CellChangeTimes->{{3.606589774061926*^9, 3.606589774716917*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"f", "-", 
     RowBox[{"g", " ", "m", " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
      RowBox[{"cos", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
     RowBox[{"l", " ", "m", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "(", "t", ")"}], "2"], " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], 
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{
       SuperscriptBox["cos", "2"], "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", "m", "-", "M"}]]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.606589775177319*^9, 3.606589785652978*^9}, 
   3.606589953055697*^9, {3.60659001796574*^9, 3.6065900419115973`*^9}, 
   3.6065902992851143`*^9, 3.6065903736120787`*^9, 3.6065904327586927`*^9, 
   3.606590835958338*^9, 3.606590882636971*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ytt"], "Input",
 CellChangeTimes->{{3.606589806951478*^9, 3.6065898072107286`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"f", "-", 
     RowBox[{"g", " ", "m", " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
      RowBox[{"cos", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
     RowBox[{"l", " ", "m", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "(", "t", ")"}], "2"], " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], 
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{
       SuperscriptBox["cos", "2"], "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", "m", "-", "M"}]]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606589807738765*^9, 3.606589953093383*^9, {3.606590018019455*^9, 
   3.6065900419671707`*^9}, 3.606590299339116*^9, 3.6065903736610527`*^9, 
   3.606590432802902*^9, 3.606590836000847*^9, 3.606590882686831*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[Theta]tt"], "Input",
 CellChangeTimes->{{3.606589777741379*^9, 3.606589779160425*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      RowBox[{"f", " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], "+", 
     RowBox[{"g", " ", "m", " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
     RowBox[{"g", " ", "M", " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
     RowBox[{"l", " ", "m", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "(", "t", ")"}], "2"], " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
      RowBox[{"cos", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], 
    RowBox[{"l", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{
         SuperscriptBox["cos", "2"], "(", 
         RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", "m", "-", "M"}], 
      ")"}]}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.606589779621722*^9, 3.606589785705969*^9}, 
   3.606589953138218*^9, {3.6065900180665503`*^9, 3.6065900420122147`*^9}, 
   3.606590299384696*^9, 3.6065903737139463`*^9, 3.606590432857102*^9, 
   3.606590836055304*^9, 3.606590882737846*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[Theta]tt"], "Input",
 CellChangeTimes->{{3.606589814061829*^9, 3.606589815331279*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      RowBox[{"f", " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], "+", 
     RowBox[{"g", " ", "m", " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
     RowBox[{"g", " ", "M", " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
     RowBox[{"l", " ", "m", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "(", "t", ")"}], "2"], " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
      RowBox[{"cos", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], 
    RowBox[{"l", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{
         SuperscriptBox["cos", "2"], "(", 
         RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", "m", "-", "M"}], 
      ")"}]}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606589816253581*^9, 3.606589953240716*^9, {3.6065900181307983`*^9, 
   3.60659004206497*^9}, 3.6065902994375687`*^9, 3.606590373759233*^9, 
   3.6065904329040117`*^9, 3.6065908360952168`*^9, 3.6065908827879057`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"X", " ", "=", " ", 
  RowBox[{"Array", "[", 
   RowBox[{"x", ",", "4"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1t", " ", "=", " ", 
   RowBox[{"x", "[", "3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2t", " ", "=", " ", 
   RowBox[{"x", "[", "4", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x3t", "=", 
   RowBox[{"ytt", " ", "/.", "parameters"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x4t", " ", "=", " ", 
   RowBox[{"\[Theta]tt", "/.", "parameters"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"x", "[", "2", "]"}]}], ";", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "'"}], "[", "t", "]"}], " ", "=", 
   RowBox[{"x", "[", "3", "]"}]}], ";", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "=", 
   RowBox[{"x", "[", "4", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"xt", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"x1t", ",", "x2t", ",", "x3t", ",", "x4t"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.606060140508233*^9, 3.606060196172099*^9}, {
   3.6060604088715487`*^9, 3.6060604684241743`*^9}, {3.60606049894341*^9, 
   3.606060499310417*^9}, {3.6060605875651693`*^9, 3.606060590754992*^9}, 
   3.606060670005217*^9, {3.606060987503448*^9, 3.606060998795788*^9}, {
   3.606061209274084*^9, 3.6060612114210787`*^9}, {3.606334377364512*^9, 
   3.606334377465119*^9}, {3.6063345029513483`*^9, 3.60633455130159*^9}, {
   3.606335373746749*^9, 3.606335377450054*^9}, {3.606589748746941*^9, 
   3.606589762136973*^9}, {3.606590032314233*^9, 3.606590035083375*^9}, {
   3.6065901087868767`*^9, 3.606590109249591*^9}, {3.6065903639418793`*^9, 
   3.606590364451488*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "(", "1", ")"}], ",", 
    RowBox[{"x", "(", "2", ")"}], ",", 
    RowBox[{"x", "(", "3", ")"}], ",", 
    RowBox[{"x", "(", "4", ")"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606060469190898*^9, 3.606060500199882*^9, 3.606060610108992*^9, {
   3.606060642952249*^9, 3.606060671468801*^9}, {3.606060753092339*^9, 
   3.606060755657111*^9}, 3.606060844579582*^9, 3.6060609991010723`*^9, 
   3.6060612183582277`*^9, 3.606062398554178*^9, 3.606064767052484*^9, 
   3.606065238163097*^9, {3.606065276936345*^9, 3.6060653030740147`*^9}, 
   3.606066445341365*^9, 3.60608260407911*^9, 3.606082636173074*^9, 
   3.606082675055092*^9, 3.606083151579823*^9, {3.60608321018676*^9, 
   3.606083225850072*^9}, {3.6060832722760468`*^9, 3.606083292634006*^9}, {
   3.60608341278237*^9, 3.606083425643848*^9}, {3.6060834745158567`*^9, 
   3.606083527795336*^9}, 3.60608368787436*^9, 3.606083835073228*^9, {
   3.606132915626033*^9, 3.606132958454073*^9}, 3.606133000841844*^9, 
   3.6061349893753157`*^9, 3.606334427311833*^9, 3.606334960630686*^9, 
   3.6063351190450583`*^9, {3.60633537782164*^9, 3.606335403910267*^9}, 
   3.606589310078351*^9, {3.606589752176489*^9, 3.606589785755453*^9}, 
   3.606589953371785*^9, {3.606590018181129*^9, 3.606590042109909*^9}, 
   3.6065902994821367`*^9, {3.606590364899932*^9, 3.606590373811912*^9}, 
   3.606590432955462*^9, 3.606590836152795*^9, 3.606590882831114*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "(", "3", ")"}], ",", 
    RowBox[{"x", "(", "4", ")"}], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"100", " ", 
        SuperscriptBox[
         RowBox[{"x", "(", "4", ")"}], "2"], " ", 
        RowBox[{"sin", "(", 
         RowBox[{
          RowBox[{"x", "(", "2", ")"}], "\[InvisibleApplication]", 
          RowBox[{"(", "t", ")"}]}], ")"}]}], "-", 
       RowBox[{"490.5`", " ", 
        RowBox[{"sin", "(", 
         RowBox[{
          RowBox[{"x", "(", "2", ")"}], "\[InvisibleApplication]", 
          RowBox[{"(", "t", ")"}]}], ")"}], " ", 
        RowBox[{"cos", "(", 
         RowBox[{
          RowBox[{"x", "(", "2", ")"}], "\[InvisibleApplication]", 
          RowBox[{"(", "t", ")"}]}], ")"}]}], "+", "f"}], 
      RowBox[{
       RowBox[{"50", " ", 
        RowBox[{
         SuperscriptBox["cos", "2"], "(", 
         RowBox[{
          RowBox[{"x", "(", "2", ")"}], "\[InvisibleApplication]", 
          RowBox[{"(", "t", ")"}]}], ")"}]}], "-", "150"}]]}], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"f", " ", 
         RowBox[{"cos", "(", 
          RowBox[{
           RowBox[{"x", "(", "2", ")"}], "\[InvisibleApplication]", 
           RowBox[{"(", "t", ")"}]}], ")"}]}]}], "+", 
       RowBox[{"1471.5`", " ", 
        RowBox[{"sin", "(", 
         RowBox[{
          RowBox[{"x", "(", "2", ")"}], "\[InvisibleApplication]", 
          RowBox[{"(", "t", ")"}]}], ")"}]}], "-", 
       RowBox[{"100", " ", 
        SuperscriptBox[
         RowBox[{"x", "(", "4", ")"}], "2"], " ", 
        RowBox[{"sin", "(", 
         RowBox[{
          RowBox[{"x", "(", "2", ")"}], "\[InvisibleApplication]", 
          RowBox[{"(", "t", ")"}]}], ")"}], " ", 
        RowBox[{"cos", "(", 
         RowBox[{
          RowBox[{"x", "(", "2", ")"}], "\[InvisibleApplication]", 
          RowBox[{"(", "t", ")"}]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"50", " ", 
          RowBox[{
           SuperscriptBox["cos", "2"], "(", 
           RowBox[{
            RowBox[{"x", "(", "2", ")"}], "\[InvisibleApplication]", 
            RowBox[{"(", "t", ")"}]}], ")"}]}], "-", "150"}], ")"}]}]]}]}], 
   "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606060469190898*^9, 3.606060500199882*^9, 3.606060610108992*^9, {
   3.606060642952249*^9, 3.606060671468801*^9}, {3.606060753092339*^9, 
   3.606060755657111*^9}, 3.606060844579582*^9, 3.6060609991010723`*^9, 
   3.6060612183582277`*^9, 3.606062398554178*^9, 3.606064767052484*^9, 
   3.606065238163097*^9, {3.606065276936345*^9, 3.6060653030740147`*^9}, 
   3.606066445341365*^9, 3.60608260407911*^9, 3.606082636173074*^9, 
   3.606082675055092*^9, 3.606083151579823*^9, {3.60608321018676*^9, 
   3.606083225850072*^9}, {3.6060832722760468`*^9, 3.606083292634006*^9}, {
   3.60608341278237*^9, 3.606083425643848*^9}, {3.6060834745158567`*^9, 
   3.606083527795336*^9}, 3.60608368787436*^9, 3.606083835073228*^9, {
   3.606132915626033*^9, 3.606132958454073*^9}, 3.606133000841844*^9, 
   3.6061349893753157`*^9, 3.606334427311833*^9, 3.606334960630686*^9, 
   3.6063351190450583`*^9, {3.60633537782164*^9, 3.606335403910267*^9}, 
   3.606589310078351*^9, {3.606589752176489*^9, 3.606589785755453*^9}, 
   3.606589953371785*^9, {3.606590018181129*^9, 3.606590042109909*^9}, 
   3.6065902994821367`*^9, {3.606590364899932*^9, 3.606590373811912*^9}, 
   3.606590432955462*^9, 3.606590836152795*^9, 3.6065908828650923`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xdot", " ", "=", " ", 
  RowBox[{"xt", " ", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], "\[Rule]", "x2"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"x1", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "3", "]"}], "\[Rule]", 
      RowBox[{"x3", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "4", "]"}], "\[Rule]", 
      RowBox[{"x4", "[", "t", "]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.606060489946601*^9, 3.606060517309094*^9}, {
  3.60606076689684*^9, 3.606060772568625*^9}, {3.606061934079688*^9, 
  3.60606196117344*^9}, {3.6060619945757627`*^9, 3.606062023893126*^9}, {
  3.6063345692549477`*^9, 3.606334569628847*^9}, {3.6063350444450808`*^9, 
  3.606335044939292*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x3", "(", "t", ")"}], ",", 
    RowBox[{"x4", "(", "t", ")"}], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"f", "+", 
       RowBox[{"100", " ", 
        SuperscriptBox[
         RowBox[{"x4", "(", "t", ")"}], "2"], " ", 
        RowBox[{"sin", "(", 
         RowBox[{"x2", "(", "t", ")"}], ")"}]}], "-", 
       RowBox[{"490.5`", " ", 
        RowBox[{"sin", "(", 
         RowBox[{"x2", "(", "t", ")"}], ")"}], " ", 
        RowBox[{"cos", "(", 
         RowBox[{"x2", "(", "t", ")"}], ")"}]}]}], 
      RowBox[{
       RowBox[{"50", " ", 
        RowBox[{
         SuperscriptBox["cos", "2"], "(", 
         RowBox[{"x2", "(", "t", ")"}], ")"}]}], "-", "150"}]]}], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"f", " ", 
         RowBox[{"cos", "(", 
          RowBox[{"x2", "(", "t", ")"}], ")"}]}]}], "-", 
       RowBox[{"100", " ", 
        SuperscriptBox[
         RowBox[{"x4", "(", "t", ")"}], "2"], " ", 
        RowBox[{"sin", "(", 
         RowBox[{"x2", "(", "t", ")"}], ")"}], " ", 
        RowBox[{"cos", "(", 
         RowBox[{"x2", "(", "t", ")"}], ")"}]}], "+", 
       RowBox[{"1471.5`", " ", 
        RowBox[{"sin", "(", 
         RowBox[{"x2", "(", "t", ")"}], ")"}]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"50", " ", 
          RowBox[{
           SuperscriptBox["cos", "2"], "(", 
           RowBox[{"x2", "(", "t", ")"}], ")"}]}], "-", "150"}], ")"}]}]]}]}],
    "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.6060605178510227`*^9, 3.606060688272468*^9, {3.6060607682595673`*^9, 
   3.606060773229401*^9}, 3.606060844648714*^9, 3.606061010045021*^9, 
   3.60606123621567*^9, {3.606061934599872*^9, 3.606061961615427*^9}, 
   3.6060620249626617`*^9, 3.606062398623465*^9, 3.60606476712505*^9, 
   3.606065238232606*^9, {3.606065277008231*^9, 3.60606530314358*^9}, 
   3.606066445606557*^9, 3.606082604140177*^9, 3.606082636221085*^9, 
   3.6060826751243877`*^9, 3.6060831516540956`*^9, {3.606083210240675*^9, 
   3.6060832259005003`*^9}, {3.606083272325725*^9, 3.606083292899436*^9}, {
   3.606083412836315*^9, 3.606083425699883*^9}, {3.606083474591648*^9, 
   3.606083527848898*^9}, 3.6060836879453*^9, 3.6060838351380787`*^9, {
   3.6061329156728077`*^9, 3.606132958549396*^9}, 3.606133000935854*^9, 
   3.606134989426075*^9, 3.606334427529677*^9, 3.6063349607184362`*^9, 
   3.606335049358878*^9, 3.606335119153776*^9, {3.606335381836075*^9, 
   3.606335404128291*^9}, 3.606589310126669*^9, 3.606589785800403*^9, 
   3.60658995356282*^9, {3.606590018228281*^9, 3.6065900421936607`*^9}, 
   3.6065902995312157`*^9, 3.606590373889944*^9, 3.60659043300352*^9, 
   3.606590836193699*^9, 3.6065908829204807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Generic", " ", "differential", " ", "equations"}], ",", " ", 
    "nonlinear"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ode1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"x1", "'"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{"xdot", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"ode2", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"x2", "'"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{"xdot", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"ode3", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"x3", "'"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{"xdot", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"ode4", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"x4", "'"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{"xdot", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.606134911893228*^9, 3.606134920305936*^9}, {
  3.606334577997357*^9, 3.60633457813736*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["x1", "\[Prime]",
     MultilineFunction->None], "(", "t", ")"}], "\[LongEqual]", 
   RowBox[{"x3", "(", "t", ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606060529493883*^9, 3.606060690795003*^9, 3.6060608446998463`*^9, 
   3.6060610124556704`*^9, 3.606061238345912*^9, {3.60606194028894*^9, 
   3.606061967290646*^9}, 3.606062027347568*^9, 3.606062398675332*^9, 
   3.6060647671867523`*^9, 3.6060652382819643`*^9, {3.606065277203602*^9, 
   3.606065303193035*^9}, 3.606066445717739*^9, 3.606082604202009*^9, 
   3.6060826362897663`*^9, 3.60608267517397*^9, 3.60608315183469*^9, {
   3.606083210285141*^9, 3.606083225944495*^9}, {3.6060832723678102`*^9, 
   3.60608329294831*^9}, {3.606083412900346*^9, 3.606083425748794*^9}, {
   3.6060834746364717`*^9, 3.606083528039423*^9}, 3.60608368800991*^9, 
   3.606083835190934*^9, {3.606132915732273*^9, 3.606132958599168*^9}, 
   3.606133000984239*^9, 3.606134989480085*^9, 3.606334427583095*^9, 
   3.606334960782917*^9, 3.6063350670958147`*^9, 3.6063351192232637`*^9, {
   3.606335384318346*^9, 3.6063354043693438`*^9}, 3.606589310177579*^9, 
   3.606589785853627*^9, 3.606589953611444*^9, {3.6065900182809153`*^9, 
   3.606590042240939*^9}, 3.606590299580431*^9, 3.606590373942603*^9, 
   3.606590433050753*^9, 3.606590836251445*^9, 3.60659088296194*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["x2", "\[Prime]",
     MultilineFunction->None], "(", "t", ")"}], "\[LongEqual]", 
   RowBox[{"x4", "(", "t", ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606060529493883*^9, 3.606060690795003*^9, 3.6060608446998463`*^9, 
   3.6060610124556704`*^9, 3.606061238345912*^9, {3.60606194028894*^9, 
   3.606061967290646*^9}, 3.606062027347568*^9, 3.606062398675332*^9, 
   3.6060647671867523`*^9, 3.6060652382819643`*^9, {3.606065277203602*^9, 
   3.606065303193035*^9}, 3.606066445717739*^9, 3.606082604202009*^9, 
   3.6060826362897663`*^9, 3.60608267517397*^9, 3.60608315183469*^9, {
   3.606083210285141*^9, 3.606083225944495*^9}, {3.6060832723678102`*^9, 
   3.60608329294831*^9}, {3.606083412900346*^9, 3.606083425748794*^9}, {
   3.6060834746364717`*^9, 3.606083528039423*^9}, 3.60608368800991*^9, 
   3.606083835190934*^9, {3.606132915732273*^9, 3.606132958599168*^9}, 
   3.606133000984239*^9, 3.606134989480085*^9, 3.606334427583095*^9, 
   3.606334960782917*^9, 3.6063350670958147`*^9, 3.6063351192232637`*^9, {
   3.606335384318346*^9, 3.6063354043693438`*^9}, 3.606589310177579*^9, 
   3.606589785853627*^9, 3.606589953611444*^9, {3.6065900182809153`*^9, 
   3.606590042240939*^9}, 3.606590299580431*^9, 3.606590373942603*^9, 
   3.606590433050753*^9, 3.606590836251445*^9, 3.606590882965189*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["x3", "\[Prime]",
     MultilineFunction->None], "(", "t", ")"}], "\[LongEqual]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"f", "+", 
      RowBox[{"100", " ", 
       SuperscriptBox[
        RowBox[{"x4", "(", "t", ")"}], "2"], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"x2", "(", "t", ")"}], ")"}]}], "-", 
      RowBox[{"490.5`", " ", 
       RowBox[{"sin", "(", 
        RowBox[{"x2", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"x2", "(", "t", ")"}], ")"}]}]}], 
     RowBox[{
      RowBox[{"50", " ", 
       RowBox[{
        SuperscriptBox["cos", "2"], "(", 
        RowBox[{"x2", "(", "t", ")"}], ")"}]}], "-", "150"}]]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606060529493883*^9, 3.606060690795003*^9, 3.6060608446998463`*^9, 
   3.6060610124556704`*^9, 3.606061238345912*^9, {3.60606194028894*^9, 
   3.606061967290646*^9}, 3.606062027347568*^9, 3.606062398675332*^9, 
   3.6060647671867523`*^9, 3.6060652382819643`*^9, {3.606065277203602*^9, 
   3.606065303193035*^9}, 3.606066445717739*^9, 3.606082604202009*^9, 
   3.6060826362897663`*^9, 3.60608267517397*^9, 3.60608315183469*^9, {
   3.606083210285141*^9, 3.606083225944495*^9}, {3.6060832723678102`*^9, 
   3.60608329294831*^9}, {3.606083412900346*^9, 3.606083425748794*^9}, {
   3.6060834746364717`*^9, 3.606083528039423*^9}, 3.60608368800991*^9, 
   3.606083835190934*^9, {3.606132915732273*^9, 3.606132958599168*^9}, 
   3.606133000984239*^9, 3.606134989480085*^9, 3.606334427583095*^9, 
   3.606334960782917*^9, 3.6063350670958147`*^9, 3.6063351192232637`*^9, {
   3.606335384318346*^9, 3.6063354043693438`*^9}, 3.606589310177579*^9, 
   3.606589785853627*^9, 3.606589953611444*^9, {3.6065900182809153`*^9, 
   3.606590042240939*^9}, 3.606590299580431*^9, 3.606590373942603*^9, 
   3.606590433050753*^9, 3.606590836251445*^9, 3.60659088296807*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["x4", "\[Prime]",
     MultilineFunction->None], "(", "t", ")"}], "\[LongEqual]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"-", 
       RowBox[{"f", " ", 
        RowBox[{"cos", "(", 
         RowBox[{"x2", "(", "t", ")"}], ")"}]}]}], "-", 
      RowBox[{"100", " ", 
       SuperscriptBox[
        RowBox[{"x4", "(", "t", ")"}], "2"], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"x2", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"x2", "(", "t", ")"}], ")"}]}], "+", 
      RowBox[{"1471.5`", " ", 
       RowBox[{"sin", "(", 
        RowBox[{"x2", "(", "t", ")"}], ")"}]}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"50", " ", 
         RowBox[{
          SuperscriptBox["cos", "2"], "(", 
          RowBox[{"x2", "(", "t", ")"}], ")"}]}], "-", "150"}], ")"}]}]]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606060529493883*^9, 3.606060690795003*^9, 3.6060608446998463`*^9, 
   3.6060610124556704`*^9, 3.606061238345912*^9, {3.60606194028894*^9, 
   3.606061967290646*^9}, 3.606062027347568*^9, 3.606062398675332*^9, 
   3.6060647671867523`*^9, 3.6060652382819643`*^9, {3.606065277203602*^9, 
   3.606065303193035*^9}, 3.606066445717739*^9, 3.606082604202009*^9, 
   3.6060826362897663`*^9, 3.60608267517397*^9, 3.60608315183469*^9, {
   3.606083210285141*^9, 3.606083225944495*^9}, {3.6060832723678102`*^9, 
   3.60608329294831*^9}, {3.606083412900346*^9, 3.606083425748794*^9}, {
   3.6060834746364717`*^9, 3.606083528039423*^9}, 3.60608368800991*^9, 
   3.606083835190934*^9, {3.606132915732273*^9, 3.606132958599168*^9}, 
   3.606133000984239*^9, 3.606134989480085*^9, 3.606334427583095*^9, 
   3.606334960782917*^9, 3.6063350670958147`*^9, 3.6063351192232637`*^9, {
   3.606335384318346*^9, 3.6063354043693438`*^9}, 3.606589310177579*^9, 
   3.606589785853627*^9, 3.606589953611444*^9, {3.6065900182809153`*^9, 
   3.606590042240939*^9}, 3.606590299580431*^9, 3.606590373942603*^9, 
   3.606590433050753*^9, 3.606590836251445*^9, 3.6065908829711742`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Assume", " ", "simple", " ", "parameters"}], ",", " ", 
    RowBox[{"set", " ", "up", " ", "differential", " ", "equations"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"nodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ode1", " ", "/.", "parameters"}], ",", 
     RowBox[{"ode2", " ", "/.", "parameters"}], ",", " ", 
     RowBox[{"ode3", "/.", "parameters"}], ",", 
     RowBox[{"ode4", " ", "/.", "parameters"}]}], " ", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.606057568163575*^9, 3.606057591735724*^9}, {
  3.606057644280609*^9, 3.6060576578013363`*^9}, {3.606060545789731*^9, 
  3.606060545981271*^9}, {3.6060612643748283`*^9, 3.606061271941895*^9}, {
  3.606062577316309*^9, 3.606062579281456*^9}, {3.606134891341867*^9, 
  3.606134909034451*^9}, {3.6063345860882263`*^9, 3.606334596311445*^9}, {
  3.606334753922385*^9, 3.606334774387726*^9}, {3.606334903870009*^9, 
  3.606334929659931*^9}, {3.606335077098484*^9, 3.606335090313477*^9}, {
  3.6065903917933083`*^9, 3.6065903918740387`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x1", "\[Prime]",
       MultilineFunction->None], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{"x3", "(", "t", ")"}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x2", "\[Prime]",
       MultilineFunction->None], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{"x4", "(", "t", ")"}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x3", "\[Prime]",
       MultilineFunction->None], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"f", "+", 
        RowBox[{"100", " ", 
         SuperscriptBox[
          RowBox[{"x4", "(", "t", ")"}], "2"], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"x2", "(", "t", ")"}], ")"}]}], "-", 
        RowBox[{"490.5`", " ", 
         RowBox[{"sin", "(", 
          RowBox[{"x2", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"cos", "(", 
          RowBox[{"x2", "(", "t", ")"}], ")"}]}]}], 
       RowBox[{
        RowBox[{"50", " ", 
         RowBox[{
          SuperscriptBox["cos", "2"], "(", 
          RowBox[{"x2", "(", "t", ")"}], ")"}]}], "-", "150"}]]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x4", "\[Prime]",
       MultilineFunction->None], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"f", " ", 
          RowBox[{"cos", "(", 
           RowBox[{"x2", "(", "t", ")"}], ")"}]}]}], "-", 
        RowBox[{"100", " ", 
         SuperscriptBox[
          RowBox[{"x4", "(", "t", ")"}], "2"], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"x2", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"cos", "(", 
          RowBox[{"x2", "(", "t", ")"}], ")"}]}], "+", 
        RowBox[{"1471.5`", " ", 
         RowBox[{"sin", "(", 
          RowBox[{"x2", "(", "t", ")"}], ")"}]}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"50", " ", 
           RowBox[{
            SuperscriptBox["cos", "2"], "(", 
            RowBox[{"x2", "(", "t", ")"}], ")"}]}], "-", "150"}], 
         ")"}]}]]}]}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606057573988532*^9, 3.60605765812558*^9, 3.606060546344119*^9, 
   3.606060694262617*^9, 3.606060844875599*^9, {3.606061249052238*^9, 
   3.606061272249049*^9}, 3.606061691104869*^9, {3.60606194215123*^9, 
   3.6060619688620987`*^9}, 3.606062029176671*^9, 3.606062398722527*^9, 
   3.60606258071868*^9, 3.60606476724723*^9, 3.606065238329837*^9, {
   3.6060652772560997`*^9, 3.606065303240801*^9}, 3.606066445834553*^9, 
   3.606082604267721*^9, 3.6060826363399*^9, 3.606082675345549*^9, 
   3.60608315201462*^9, {3.606083210463627*^9, 3.6060832259934196`*^9}, {
   3.606083272417598*^9, 3.606083293018358*^9}, {3.6060834129707823`*^9, 
   3.606083425798828*^9}, {3.6060834747219667`*^9, 3.6060835280899763`*^9}, 
   3.606083688074575*^9, 3.606083835256248*^9, {3.6061329157736464`*^9, 
   3.606132958664798*^9}, 3.606133001033801*^9, 3.606134989528491*^9, 
   3.606334427644618*^9, 3.606334960848918*^9, {3.6063350731442327`*^9, 
   3.606335119294794*^9}, 3.606335404468728*^9, 3.606589310223324*^9, 
   3.6065893471160307`*^9, 3.606589785898416*^9, 3.6065899536608353`*^9, {
   3.6065900183294764`*^9, 3.606590042290183*^9}, 3.60659029970947*^9, 
   3.606590374041115*^9, 3.606590433119122*^9, 3.606590836316287*^9, 
   3.606590883117279*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Initial", " ", "conditions"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ics", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x1", "[", "0", "]"}], "\[Equal]", "y0"}], ",", " ", 
      RowBox[{
       RowBox[{"x2", "[", "0", "]"}], "\[Equal]", "\[Theta]0"}], ",", " ", 
      RowBox[{
       RowBox[{"x3", "[", "0", "]"}], "\[Equal]", "v0"}], ",", " ", 
      RowBox[{
       RowBox[{"x4", "[", "0", "]"}], "\[Equal]", "\[Omega]0"}]}], "}"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.606056905097599*^9, 3.60605690540753*^9}, {
   3.6060613110756702`*^9, 3.6060613411396637`*^9}, 3.606066700663871*^9, {
   3.606134867395602*^9, 3.6061348767286463`*^9}, {3.60633479309138*^9, 
   3.6063348103852577`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Our", " ", "\"\<answer\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ans", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "[", "t", "]"}], ",", 
      RowBox[{"x2", "[", "t", "]"}], ",", 
      RowBox[{"x3", "[", "t", "]"}], ",", 
      RowBox[{"x4", "[", "t", "]"}]}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.60605692278047*^9, 3.606056929655108*^9}, 
   3.606066696431993*^9, {3.606134880242103*^9, 3.606134885882526*^9}, {
   3.60633481364163*^9, 3.60633481585443*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Equilibrium", " ", "maintained", " ", "at", " ", "\[Pi]", " ", 
     "offset"}], ",", " ", 
    RowBox[{"being", " ", "an", " ", "inverted", " ", 
     RowBox[{"pendulum", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f", " ", "=", " ", "0"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y0", "=", "0"}], ";", 
    RowBox[{"\[Theta]0", "=", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "10"}]}], ";", 
    RowBox[{"v0", "=", "0"}], ";", 
    RowBox[{"\[Omega]0", "=", "0"}], ";", 
    RowBox[{"tf", "=", "15"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nodes", ",", "ics"}], "}"}], ",", "ans", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ny", "=", 
     RowBox[{"soln", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[Theta]", "=", 
     RowBox[{"soln", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nv", "=", 
     RowBox[{"soln", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "3", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[Omega]", "=", 
     RowBox[{"soln", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "4", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"NonlinearPicture", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ny", ",", "n\[Theta]", ",", "nv", ",", "n\[Omega]"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Purple"}], "}"}]}], 
      ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Motion of the Overhead Crane\\n red = y, blue = \[Theta], green = \
v, purple = \[Omega]\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"f", ",", "y0", ",", "v0", ",", "\[Theta]0", ",", "\[Omega]0"}], 
     "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.606057665209507*^9, 3.606057665447156*^9}, {
   3.606061347948771*^9, 3.606061381019528*^9}, {3.6060620976274157`*^9, 
   3.606062181787188*^9}, {3.606062412983165*^9, 3.606062417518367*^9}, {
   3.606062459080598*^9, 3.6060624652692738`*^9}, {3.6060625024797077`*^9, 
   3.6060625095627613`*^9}, {3.606062540551323*^9, 3.606062549588793*^9}, {
   3.6060625973644257`*^9, 3.606062607185774*^9}, {3.606062711782979*^9, 
   3.6060627123095007`*^9}, {3.606083140470625*^9, 3.606083140622908*^9}, {
   3.606083187063349*^9, 3.606083217804311*^9}, {3.606083485872307*^9, 
   3.6060835185742483`*^9}, {3.606083679168171*^9, 3.60608367928995*^9}, {
   3.606134826584313*^9, 3.6061348619012547`*^9}, {3.606334829186893*^9, 
   3.606334913384503*^9}, {3.60633494837677*^9, 3.606334977071535*^9}, {
   3.60633510406249*^9, 3.606335160029153*^9}, {3.606335261242816*^9, 
   3.606335272912623*^9}, {3.60633547463026*^9, 3.606335502994381*^9}, {
   3.606590270030118*^9, 3.606590276828019*^9}, 3.6065904825944633`*^9, {
   3.606590525901038*^9, 3.606590546229306*^9}, {3.606590662721533*^9, 
   3.606590678661818*^9}, {3.606590715088994*^9, 3.606590749612344*^9}, {
   3.606590784365905*^9, 3.606590788538269*^9}, {3.606590842581727*^9, 
   3.6065908431225243`*^9}, {3.6065909102830353`*^9, 3.606590910552889*^9}, 
   3.606590973727824*^9}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwUm3k8VO8Xx+1Ldmbmyr7MWMZSpIV8zYmSLYQKbSopUVSiUGmThCRFQikk
pKLNkucJSZLQ2Pc1lC27xO/+/prX+3Xn3uec8/mcc597X6+rfNDH4TAXBwfH
KR4Ojv//znR8KaPfjDXxFUnyXyXLRuxk6XObmk6xdvSfbL5FMlC/H5RuusyS
q9Df9EqOjWitEoLimyNYTsdpAzEKbORvn9nI3RTD2u7xe8taZTY6kPc1czky
jvVVvf10PJ2NbGgj5/+aJbLs1U7dLNJgo0Tj6xl/gx+xwk0ns1J02EhilIiZ
b3zM2m8ZObN1DRuFPswImtVPY3lL349/YchGi/aGh6cjn7Is8v4rawI2OsVV
aTs5+IzlcvB6dqkFGw3muW6YMMtmpX5xi/Ldzkb7Dv9SHkvOYZ24kJ7d6cpG
x4SKr80Ev2TJBUpbSxxmo84iW5+pxlzW4a6ULR+C2CiBSrif5n3NKhlFVhvC
2MjpRKfzH/03rOojjvSAu2xUqehrOh75jpWqWDq0KZeNrp3dsN6n8D2rxZuS
Wv2RrE8th/boYD5rse5pt1IdG729fJv626yIVWP3pYWYZiPfVpcVXic/sA7d
Pxn9gb8eaRmoLA8lF7NkPA+VMGXrUc0pl6nJYMyyEjaZ3ru5HpnTh9snGktY
FK/Aaxse1aNUe1vnVydKWeYmbyha+fWI83xunS9vGSvv6HuD4bp6VFQf+HlM
/xNLwWmIo1agAeldF3o1EvmZ9Uw2dWzHhQYUleej9ZxewRp4kUctSWpAvzt/
pHkXVrAmfHRWcBY3oPQNiQm/Br+wfFukhhc4GpHcsPbVIbMqVuV7wnAuuhEF
0m4vZbRUsW7nnHamvGtEjabTZ4+e/MY6MD1btqKjEcU8+HD8Z3I1a0GkPipc
twldVXua9Se4hjUVyon+NDeh+cb1d8cb61gVPdci9+xuQe/1Bdyeav5g3aJ5
xojGtiD/yCbmvqAfrNeSPWYN31rQH9Nz+KsCm2VeYlqbvbkVDT8v+JV+uJ51
t+Wn1BNWG8oQuPl277t6ludO/FT3UhvyOLT7EkWwgSW96VxOW2kb6pVepF3O
bmAl2Annp9u0o7Yr/5nunWxkffppE6Ds3YESOkREKFuaWL7BsnZjbzuQs2FH
Y+W9JtabW7JLv7k6Uf3oheMbjJpZigELaReSO1G1C46XutTCes/50Ix6qgvh
VWZjX0TbWYylD/a36rvRhXCpghC3dpZ6ucvaFp4eZNzfe3V9bjuLKLzvU2nQ
g/ITrsqk7ehgRaLdcsn3elAub/mWkMRO1rZDQV80DvaiuuN0W1lqN8tvbd7r
syv7kd6DiLyZ/7pZfD5y7/0d+1F0xZR0nUc368F4wCa1qH5kq/qpN+x9N6u8
92tSIu8Aqmw6fG5mdw+rsvX4lvnFAVRq9jS19nEvy3LsfQen6BBaHfViaLai
lxWhor/us+0QSm56p6sw1sva/fq14OroIXT2eMX7Yxv7WHb6wZyjlGGkGzdU
xc3uY4X6W2epq/1CCcNa02t5B1im7v89nTwyggTWGhjt0Rpg6Z+QamXkjaAz
F40vXt4+wLpdZxfOtTyC7CnbBL8nDbDG/f6T+RA/inhNTsgfXfeT1SZGczZj
jyHf2y+3JBwZZJ3cLuG3tHYCdbS+D8eRgyzn0dfc/AcmkLXax+8DeYOsl+Zj
L45GTCC1wlqXNRxDrIK59qgNfROote/P8ar4IVa98apOyfg/yHzD2ntLX4ZZ
VxcumC2LTyG5zvyBg9ojrDzv69H1VrOIY/Jk/JftI6xQjja5tyGzqI+PabU6
YIRVVaMY/PftLHqum/D838cR1m/anc539DlkciHQL37XKMv9KIUQ5Z1H++U3
clVfHmOJBhhWLDUvoM16k3kGGWOsxIbrdnG0v0hjS9bhB9/GWPqPDjFSHf+i
s28j3Q2Ex1n3ne8+U/z+F0HHv8+cu8ZZvgGiiiVfF1GtTkdU4u9xFp8ReIy3
LaGy9QU/7ZbHWa7rWutPKi+jt5vuAbfkBKskhN18wWMZJeyw/eO5foLF+2bC
3/TPMjp4vnjH+ssTrANi28Pswzjwn6pkuTriD+uPbHyh2htOTPHen8lvNsk6
Lyq9cpstD2byPym33zXJ0ikNt3lwgQfD44Ge+16TrNdN3mrbX/Bg76bjstqx
kyybjYcvjUnw4rLNwRH2/ZOsvLNuxypaebGf/P0T969PsX47fNDYc5Ef/6iu
09eqmmaNtjgViHatwIOeNDu/rmnWUeMNizupQniJx9Xrw9Q068idsXY3KyHM
3Nj9xE5+hnUyfDk0NU8IX346RvE7McMKKMt4f/yyMNYPEZ4tEp9l9eZiP3tR
URyjZ15ou2OO1fCu7IWVtzhe1eqy9b+jc6zso8UpMRfFcdXV4z+0guZYZ70s
7V/FiGO+pthfAilzrGPxckV+78Vx0IVe2dLfcyz+vjW/lbgksPvXkOD1V+dZ
Dp9STvpHSWDOM7ECanHzrHNxTXEHHkrgZIWMWErmPCtb9P0b5ksJ3HTye/bE
93mW6kLHKedaCbxNWqE9S3aBNfpm+ru2pCRed7jwP6W8BdaQou0rgShJ/EP0
+xfR8gVWsnqQ1XKiJPZ937PjX9MCa+MnP+fmLEmcKbTiRMvSAitfnd6/4Ysk
Vsx1To61+ssST7aZyuaSwgLL00sCPX9ZOUsnTBN9pXBz/Go8If6PFVyu+7XD
kIITfmSJ+TP+sSoutS+nmVOwq6j6/gXDf6zxj4tWDo4U3HZFfonr0D/WvoP9
qa7eFNx1YoUx5c0/lmpC8z2dJAoe3Nz3bp3LEqvrgJHm5DwFP7u4n7/w+BLr
0GG3e9K8VHysoGUn6/ISqzZCMJsuTsW/V9VOb81aYlntWa8wwaDicZniNS7/
lljNfYT2XnsqnhuPexGUssxSLTcIu/2IivO1pJaX3yyz1Pb1rGBmUnGgR5Tt
1cpllgRflUNmHhUvtl4diZhcZmVE7go4WE7FIb3vqd9VOKBPKWAud5iKr1an
OXb5cYBq6vW4Pl0a7vM6FKRykQPONOt95lxPw1sElZ+43+CA0sKBbn4WDfNt
TvwzmMQB161XaH23peGw/JjbE+UcsOGhl6PNcRq+mXrxO9dKTpizmrGhpNOw
lYGnJFWVExa2ixtkZdOwQJnDDnUdTvi0uH+tTh4NX+1ltFpv4oT4nOT+P4iG
g1WqBmI9OUEr+fyj6000fOKR9JJaASdsX65f+sVLYO3VXJsMyzih/obQIkuI
wMPo1xXrak7grix9FCJO4COdxYK+PZzwefrH1goZArspHKbmr+ACYkK+97Qu
gbcnvtK23s0F27+94HF0ILC49gOfvYe5wKDxSPL5nQSuLrya6+PDBScnMoLv
uRLYqnXXhtgrXHCIaeR95yCBTWWWzNqzuECvr7i26CSBOTJ/ho694YJc7gbr
PWcIXGxY+4UTc0H2heya4bME3uiSaqfG5gLNnNfO9RcJbBBvtdtnkQtU7dvH
eyII/EfdIPkSHzdYc+2z/XeLwC/fyXffEeeG6PeHTvDfIbBO47jHezo3zGVQ
bX/FE1iNFneKcxs3hPwX1j35hMB9aSFvpHZxw+zmqoyodAI/XntsjnGAG35V
azevfEZghR3/XbA6ww2DZ9Z84swhMBHbe+NOEjfgid1fV74jsLTWm6tz6dww
IJFdTc0nsExJ6MW9L7nhSCIX4ikkzx/XPKNeyg1N3pbJhcUEVrr+1yeiihu6
7dalX8EEVlH4dmyinhvMO42rTUoIzLDxdSsc5Iang+Y5UZ/IeHs37Vb6ww3u
O1QuqH4msEag1M5rf7mBw+lzUlYFqWfGW2s7UR6QMfszf/crgdfw/FvXu4YH
YqeaDdg1ZL0eVOtZ/McDXvduP+KpI/A6/Ufaz8154H7t50yNHwQ2cjNTCXDh
AXtl8w/W9QQ2nqXItx3kgRU+JT+sGghsEjVAbPLmgdMZnen/NRJ4U9ENEaGL
PHDc8XDyUhOpp+NuAd8wHrixfKmmqpnAm4e1uetv80BQwtOWqBYCm19a+mf4
gAeu9i+XbG4lsIV0zVxyKg/gPwuRoyRbvUiZ5M7hgfzcMlZEG4FtzE+PHn3H
A7PUG23y7QS2bd889A3zAI+I39EnJNv50fr0K3ngWNirn3IdBLYXGuyI+8ED
uWeP7wsn2eFxfvNiGw8genXNL5KdDG+yDwzwwDenwU2bOgm8s2bP9/IxHnDf
Zp0XTrLzEd1KrXke4Iw8qlZBsuvSclk0Fy8oxLxKnCd5z91aNC3EC+ta4wjF
LgLv1X5S4Erlhc8DEfEbSN5X6vcGKfCC1RouZXOS3VzNX9I1eGHrEcfcrSQf
nCCybujxAsea4zb/keweNpQ2asQLch+FRtVI9lAsfOS4mRdkeXru8pB89G3E
g/fbeOH86GPTBnL9Y9v23ZPfxQtlpzgnH5Ds1bfq9mU3Xjh55WXaDpK9gzgj
fnryAo/UIRdukk9I/gi1Oc0LxzvyhNPI/H2fpV56FcwLeTcfFBmRfAr8g2mh
vDB2Y8S9jKynX+PWgKBbvHCW+xynKcn+J1ae6ornhXQVkag8Uo9ziUVHMrN4
wfbvTY9TpF6Ba6IOir3hBX9BaiYi9Q2u3L/Xr5gXsvf2VnGQHDLH5WhSywsv
sugP9pH+uHyLve1JCy8cmEzZEET656pauoVAHy8U2/k9uEn667qTpUndDFlv
s32x19lk/7yuluHi5INbrhTD3aQ/c6ScZvWE+OCep7qrEunfhrp9L28r8sGr
ZK/hC9/J+uj3RXzU5IO/Ks82SVcT+N9tT8+JNXzwbd/6n4+rCEzf7qey3YIP
nMKnhm5+IfD7l/NLIQ58kIMDdYbJfrIRv9j6cg8ftG7kiDAsJ/Dp7zdixU/y
gdjcQ/cssh9Ltj3kq7nPBzHXKr40F5D+eU7vXX7CByLtgyboPTk/hTPRqhw+
OHupavvdtwSWqHp99lYJH9i49ItI5ZJ+sKoctv3FB+eG/311yCDw1DO7zxem
+SDBVky3MI3MX7D+Sc4y+f9WyTgpch7lVHTuEaXwQ2Vhmm5sEpmP+XT1N2N+
SJo5Ill3m8DR6YFZ/8z54UKjrev7KDI/Po4wne38EHu66W/kTTKfTys2RR7m
hzMvOyb4rhE4wUwpzyaKH/CVb/w6AQTWfZJ2Kzie5I2frt88TebHpeWd/Zgf
xA1upTT5EHjo41qG8Dt+2CUtDSZHCbwBrOO+dvKD2fz3XQbOBK56WHP67xA/
BOdGd/A4kfkt77DXmuKH3KYPeqV2ZD7FboI3BQRgt3ofW2ArqZexf5CVngDc
2jit/MaArK9hyv4vlwXALOzyoUBhsv8fiU5ZRwiAI+dvnQB+ch7yB4dV3xWA
HyCRcZCLwDXsna9+ZAhAm/IuJ945Gtb1FebuqCaPBwQYBPTQ8GB6QPofGUE4
tj05dYG8HyKRfqMzdEGYTkg41/Schu/5OXyf1REE7WnGqydPyfuxqc7cIgjC
hT9+c5wPaPhxe48l/xFBGKKf+9IaQsN7KLYjsnmCEOfOEzhlQcNrggovJRcJ
wqC08auHm2h4RY8GTblcEHi8SjXXG9Fw/gtullqzIDy9kpTI1KJhmnV+9Opl
Qeiuq6xSFqbhmkt0gy3WK8AyO1V9cyUVbx5bCDzRuwJ+qIS8mF5HxecsYpkf
f6+A/eYed0x0qDgnRadFamYFnJjpLTmlSsXSTm6G+QJCYNFo/DVRjNzfvP80
y60rBNML/0anByj4zuVov/tnhWBB4xvOuU3BFa2a9N+XhCBoNEI9LZSCFw1K
f5jcFAKjAfeaa0EU7PFzWr8vSYi8P6Td4z1MwUY2uyd0S4VgrdODh4vrKLiH
qnaiTEQYzty6cju3QQoTPkieIISh5N9i76ZKKWxT4fzNU0kYXj1YWZv/QQq/
DbypLbZGGDq+xc4eTJXC4Z3jwy7OwmB3tWLrPXI/qP+s8MjYY2GY/b6ZZw+P
FL5kvP2AzAYRkPn7jfs3IYkt9iX/WW8qAuY3dnk18Uli0ZBfV3bYiMBAfu77
R9MSOLH0Wnq0mwisPR5iUFongd9bFfziuyECgSefvTG9KYHHnVX9J5tFIIV/
/ZeCKXH8LtCXX6JPBJocU9OZ3eL4QuKHeN1RESieWcM88U0cC3ftKvTkEgXr
u9zNx9PEsfqRCI4upihIZ7p0sRzF8b4z0+FVQaIgITbceNxaDDPiTOWGr5F8
d6fDJgUxsv63nvNHi4L8Z4fn2eOiOHBRs8Y0VRROa7Z/tIwVxXev7KPmV4kC
9+GtiQ8aRHDV7c8P0+TFQO9rWzlYCGOjnPuvLyAxcMwVV4yYEsCbG6v/jVaI
gTrz3P7ljwLYloNn6/46MXiQPzZ0/pYAPuRwopnVLwYlhi2Gr5kC2DxI+WII
rziY9VkspBzkx76KM082aYnDC+alvLw2XjydF10xv0ocXEVVgtc+58WBFloj
rwzE4dFM1Uf+C7z42km3dSom4lBvbFuVpsSLE0orK7i2i4Pop+2Zfzx5cNmR
hyOl/uLwdezhvnMi3Nhy0VAyOEgcvg2tML3Sy4Wro9nrDELEwdo/mfIznws3
5wuGpN4Qh4XNyk4FR7jwqJCf5LVEcehm2LgGf+bE0i8t1puXiMP9OGHPd/c4
sPfcREiFiATsFjmV7926iIxOetAGJCVgo9uTeq+7i0hguCWLW1oCPp2eKF+2
W0RpraUNJioSUJKXPdZR/hd1FN/VfrNOAlZvufPeqnAB2V0zbErZLwFc49ry
IR/mkMLS8+PIXQIYhVerhUPm0G9/Fe52Twl445zykWY2h8KOCulK+0nAE535
0aTKWYSt269EhUnA5df9W/d0ziB9yUurgl5JwNuuyylfFaYRx83psvi3EpB6
ds2j94NTqJr7mOvbQgkYYO+op+RNIa9ph2sTnyQg+XvdUWnLKZTaRG890iIB
wVJRVzYGTiLaw4pQJ25J0E8soV0Yn0DzWuIdOjskIWQlc+9/TqNoJknm0hpX
SVBT3b/3LvcomhJj0A33S8KTPvupzLwRNDppeGyzpyTQEnCbMG0E9RQemnE9
Lwlvs5uuJPX+QpXW70TD0iTBo+zerUspQ+jzh4+vIjMloSDVYb//niFUtqrK
6c4LSaiT2pugJD2EiqW6E5LzJSFKrF7tzu1BlNu6Qv3NN0lwG3bd0h3xEyV4
7WP1TEuCe6ttd3JqP4prP9rzc0ES7o3fLk071o9i7U5fG1mWhIfs1AhnvX4U
tSbs65ygFNBut25AuA9d/vtql5iCFDyOWcw9/7MXed3k9TU2lwJldxhRdOpB
R/+JSZlaS8HpX0s7btN7kIePzNut9lJQ4niA/mS6G7k5rlp0cJUCRIjUpN7v
Rk6yLmGeJ6RgI+ua34qhLmSclf3o3j0pGF9xXMvVshO1KmU93PJACkztnnkl
c3WiwHvPkqceSkHgmP/D3qIO9O5SeqLDMykYyZbK9DLoQPrOj+JFi6SgZdXQ
t22r2lHtt+S4D1gKIu9r/3dmvA35miXd8/4kBel73prfyW1DOboJsZXVUmDQ
JSucY9iGNHljo0O7peC/LcNlRo6tqCIw5tbaASkoTOgIm5RtRR7j0VF9w1Lg
zt/UF9/fglJbIyNMp6TgXlzq1dSgFqSUez1siY8Cj2kPw5NymxFtf1CIvzYF
ch0Of6daN6E37HMXGXoUmKaKNwupNCEnq7MX2Gsp0JgUerRtvhHFrD0TrM+i
QLl2ErdgdiMSEfY5O7qdAvebxrn9ZBpR9qXjAUk7KXA37piTylwDspr18rfZ
TQG/PErwk4YGFNZz1C/TnQLMPyc+ytxrQDz5B309AihwJqf5RZlCA3qie8CH
GkyBnu+zNye4GpBp6v4TZSEU2NDx8dnwz3p08dYeb5Vw8v9NxEuT1/Xk1ne3
V20UBYq+X5aNf1CPigJdjoXcIeMphJqCK/Vo4fDOox2JFFgXzYhy2VmP7rc6
HYlMoYCQ4bFjbKhHG7Y7ehinUwAfZKjTtOuRv7G9e8ILCuwzKR78xVOPqLm2
hyxfU0D89F984Q8bvVbfdnDuPQUYuboqDV1sNCFp5bazhAJhjdMPahAbNXmr
1Bz7TIFBG51/ui/YCJcvsC5WUeDj2+Qzpx6yUYbSjxd3aikgVx0WlBDNRtGB
WYoZDRRYtmZeS7/MRmfZV24VtVJgU/9HgXtn2MhNd89yTRcFdqzfHXrUk40s
wgx8+vsp5Lxf80R+Hxut7hHunB+mgF7NDpE3jmwkbdxvKzpOAQ34fkrXio04
7n0oVpmmwFhk1qUbm9hocOyu7vqF/68/8/OTIRt9tzyRbL1MAUvqB8defTZ6
+8Rc1I2HChVWVae7tdko+Z/CBT9BKnzO1JLC6mwUumt2JEyUCt7id2QuqrLR
iVff9yZJUcFn6edpBSU22imU8e2VNBXCZsUEk+XZyORwyH/l8lQ4cWG89J8s
G6kh5+ctKlRopvpE/UeyyEo9+TF1KlyCkw57SZ46JRjJrUOuT7u7sEeOjdqq
uhcJfSr06QpHGCuwUZlagbf2eir8Oluks0iulx0S0wbGVDD+9U4gkc5GsS3H
bHZsosL6YHFzOU02CjYwK/I0p8IGlSbR87ps5B4lq33BmgqPfihFFBuwkfXg
5IMYeyp8DV0c6NrIRvqmVUJPd1Dh4bO7Fn1mbCSTmBpU6EqFgnnm7wobNuKa
Cf71fT8VNLVYBrd2stGw3Y7dfe5UsLkcGLb+ABvVPdP5OudJhVCza/Yl3mxU
wM23UcSHCmvz+KdWnWOjx3s7MpX9qFBIzWwJCWWjG+/eyqw7RwW/FxTvN7Fs
5CtxK9zqAhU+lY2JVT9hI2evIwv7rlBhRsZjw9c8NtJQlG65HkmFxI7dEWca
2Ej83LhlYgwVeNR1OelDbDRXV5H/Mo4KYmMnr+QvslFF6Ln7zSlUqHsxaZqo
Vo+OjLY4a72lAnf5rhuO1+qRrUVeBauQCj3zJi+2PaxH6x7f3OCEqRBH8xow
KKhHfDuNpc9XkutRg3mq/9Sj9A9JjdUdpF7xDnybfRpQFOG/tbeX1PvjBB1H
NyD/k7bvZgepsG3qgIReXgPawli+pzRJBflHuRnTCw2oL8Jt5yl+GuwWLLmv
ca8RnRjWVlktTAN/Vzv8uKgRzW6dHxkRp4HOPvf1C72NaAV3zDVPGRp4Lsps
3LK2Ca0+V/raTYcGzyW13x/taUIFDbdCFPRpMNZz5MOwWDMyM9hj07aOBn51
cwUOJs1o59hU7y6gAYfUpEVzUjM6f1hNys6RBhqxmru7j7QgvtI/HcLONFA5
dvxXXmILilZCmZV7aKBuxLV8pu7/83OXqbkHDZoEFT9+g1ZUuf3Gyf/O0UAZ
jDXGNNoQzeT3d62HNDjAq1ovq9GBHj14/2DoCQ3EN4dsuOTdgTTnrx55mkGD
983OAr9edSDj1/LLKrk0KLf5s7uW1YkOMe10ZT7R4KB+iBu/QRd6ScuNEPhF
g9HC/K4PZ7qRkd8F5/IxGjwzq1U5/KgbldZa0a9O0SBFCvbf/9qNGiJ6C5f/
0eCqU9HxLNUetMhF/TUjTkBca7hlWEsPshwLsOxfR0DIz6TaV4f6kJyeQqiA
MQFPDbZ0fn/Qh0ZPlZVobSIggBbPesjuQ7Ez4sanrAmQV+hlO1n0o45/z3SX
9xMw33/RddWGAXRKuE1q5Q0CRjqkfDYaDaLNtpftjaMIYPsqJn88P4iIaI3I
/XcIuHNklM1dMoiKpM7wpScRUESJyyy2GUJ8sqLz+rkENEmGFMl7DaMETeiw
aSXgbkBY+tLX38jba0DGt4sAvefpD8NkRxDrecSuO/0E3GT1+jd6jaC+1c01
zWMEGJ+43vVJdBTpbjhV6sEjDU4Lh0Wn946hUvPUjBAdadgQo2gnKjGBfh8S
OP36ojTY3rlPYahOodHkzR/QVWkwu8j/omvnFBprDuH/ekMa1KO35/HdnEJ/
7OYfdN+RBjlR90uxU1NoduNwmWiGNHw8bCL/pWoacVGqaJ410nBVK0vbIGYW
8dgJHPCrl4ZVRz2fDFXNIt7wzVkXW6TB9NndQqrAHBLg+MC61ycND4weczdc
nEOiv58fLZ2TBv6xiAbKmXm0suxWgbzySnjdJ7EtOeAvkln+yqOpthLk9TNt
rQv+IjkjATsDrZWw5s+Bu1f+/UUKL0N6rdauhIDjobcSry0ieuJJ4bOWK+Fo
w/DBR4n/0Go/x311J8nzP285Gf9zGZnTCa7rJSvhxLmgOLkQLjx0cGvGxs8r
QXYn55jcMy4ckRJgO/51JXy4n/z7TB0X/qHQlOBSvxJ+uXHyGahxY7eV99do
D66E8/92O/+q5cbnRGUP14rIAP39Qq2RES/OnlOokHWRgXf/eakQmwWw3Xq7
EzV7ZWBmOcpvl78A/nPmIuXaQRkor1PPy8oQwIaTnW6jXjLgqri/5qyIIC4f
eTSPL8hA5NHePI5GQdzZo6LlkSoDKneofHXuQljym1rUyzEZ+FTNK3HCVhQv
ja1Oq5ySAe3N6WlN50XxsOTGor55Gcg+pxvVlC2KS5zthqV5ZGFyxvdxvKAY
Pt0XYH5JWhbu7Rai0YvFMPtvxdL2TbLQYG8jIBAujrHCD6q3uSwcW3vpQniy
OM7e1K4dai0Lcceiu9tzxfG16xOuBTtkYVzX+PN8izheJyXzTuWYLBiL+obQ
NCVwHNPLZzJGFrQnQ04c+iCBr247EyoSLws8NS98Db9LYF/fi0nqSbKgETJl
ONQlgS3e3vm6+6ksSBryCzVxS+K5TUXqZYWyIF5/2GZ5qyR2dRHpiu2TBcaD
HpmaL5JYLuyF/bp1clB+9U5x5RspnJnzvHTeSA6u38lpeFoihTfUZ637wJID
a5FcL+/vUthJJUNus6UcnNNckZQ9KIUjih4Nbt8jB1X2678Jy1Dw3/HbIccv
y4Emf2Kkx1kKDiOiJ1dfl4MnqvHqlVcomGYS5TF1Uw58DtcKErcoWP9muE3Q
XTkoUFNb9E6j4GOMK9I3MuQA0/d9FKql4BYXv5ep1XLwucDhHZ1OxUdDTqke
/SEH6k2mmQxdKp5J972n1SQHG/PGlsU3ULHklHdwbrccbBpeJfLUmoqtog5b
4Ck5yJax+K/uJBXnl+zsapWRh7xtISv1Cqg4XstQXOqIPAi+Tlp/aiMN77D+
Fl3sJQ89l4zK3pjSsKTXAYljvvLkbid464AlDd/MvCH58Zw83JlS8xF1puEL
mi0Unwh5KPZYJ3z+NA27qwet/PpKHh623drQk07DylvFEvzfysPP03mTi9k0
3OHxREalUB4uBne95c2j4V3pX2XPlcmDdui6lO5iGrZiyCmoN8rDm+VupU/1
NKyn+kHlyiIZn/GDXmsOAo+abn+iy6kATwWrje15CZx5sF+1hVcB+kf/NZut
IDD9sQhDT0wBRAr69OelCCytvE+9U1kBIj+UPkpWI3A9/HkarqYAO7HoHkUt
Ase4hWqs01KANyaII3oVgYUe5WhGGihA9w4Rl00bCLyksKy1casC9Ly5FTZg
QeBCkzvZA9YK0MU9XjtoQ+Cz+9R1YuwVgPtDyLNWewJPJNnpDrkogEqco9Md
ZwL3yT1aHeetAOa/KDU2RwhcKbNp7eRtBfgzoZg+f4nANQov1HjiFKCMKXDY
/hqBG1TkpamJCqC/y/XIvTACdzPnF9alK8Cyld+d8SgCzxm9woEFCvAlvlug
K4GMz0Qx9yZSgPfHfN3ykgjMYxb5JLFMAe7r6D73f0RgMWvP0OJqBdhgcCHo
WxqB1XYr23D1KkBm1BeZ4hcE1t5/6z+pQQUQFnnk8P/3mfqH/unSRxTAVGW3
vMtrAv/n1SxhPqsAS+v3v3n7nsCmPlu5dy0qQOgG/tTqAgJbnH4zdYRTEfIu
KRxrLCKwU9DtxhtCiiCYk/ihEBPY9eJyRYK4Iqw7edUrroTAbleOF2RRFeGa
bLueexmBvW5aJn1TVIQ1ukVmtZ8JfPkB5yEJA0WQurk4vPCNwGEPfZxUDBWh
oX+p1e07gaOetG9ZY6IIFXMs+/c1BL6fla+xw0IRZsc2jm38QeDkF+oyHtsU
odxWT+com8CpeXeFAhwUYQVPAy20nsAvC0+Oxu9RhK4cG6m4RgK/RZ2dzw4o
wpCprmF4E4GLSrfVFngoQv39stU+zQQu+VxY8tVLEZy90znNWwj8+avm6zZf
RVDY9f2VaCuBq77HpY2cUQRXI52tX0iu+8EbtxSoCBtnnn8+00bgpsbTYWIh
ijB5jGVIaSdwR2v3OaVrZL3Ofk9JJbmv085LL1wRspet+dU7CDzc+2GP6S1F
mDixx+cByeM/tWwdYxVBK+VAO2cngad/3We531eE5xJJjq4kL4zx651JViSf
X2zZqSRzTJ1RCX2iCBw3Xh/oJplvrlcqLkMRbp4XWxLrIrDw4nbejOeK8ONm
ctZqkiU58Mz7XEV4w0zxNiNZmkd38Ms7RQhvLTG1IFlBILG5pUgRTLet02GR
rCq84uuvj4pwSOAaU4NkDfGzRYvlirAUu8GQm2RdysBzkSpFUAtq2VVDrm8g
7fRQoVYRfptOXb1FspFcSfSqBkU46CeGgOQeVXrHUIsiHCYG04bJfG9ohWql
dipCaAs6FEby6jWDZ/f1KcL5VQVTK0luMrIqlx5SBEpButNDsn4hptlSP0ZI
VthxUZpkDSvRA5F/FGHLcqzvNbL+AS51fzkXFcGtgv+eEanPrdUJ9H0cStA2
2/zxMqnnIQNr60IuJbBewXpSTOotZPw8/gy/EpjtqPGWIP3QwdqH6gSV4FZ8
vrkG6ZdcM7GBVcJK8Ix5s0C/gfS39ck1w+JKIPF7n6MK6TddOxXXrVJK8GlS
7hg/6Ucuxx8hqVQl4D+1eqmzlsDPXNdW75NRgng1epAX6efgfQNThXJKsPcg
w16hmsD2B+NkVyoqAe/HNcFlVWS/e84f/aGqBC8iol8NfyH9djzz1mo1Jbhh
8yv9WAWBH53c/TZSQwloq72/tpcTeOu5D9wWOkrgmSYXkFRK4Hthl5KL1ilB
kdjMVAjZn8ci9D+tNCTjmRGSuE/2r0l07y//jUqwzXTH3BOyv/vjthjqAXm9
B9+nbpP9b/BUkJ1mqQTCiYoy37IILJBVsMBlowT7k4T5A58RuC3HS9nNVglS
P05arHxK4Ctvv52QcVSCH1f3Rug+Jvvh023BW3uU4OmrRIfcOAKnfzFd/Xuf
EtS8eac6HkvgwG+TOy0PKMGXFVGlijEEVq7fkcrtoQSBtrZqThEE9u1byTrr
Q65fY3FWLITAotyP/Q5cVoJlm+6nyJ309zxynLiqBGs1wgc+upHzcLRd/9J1
Up+td4Ry9xB4rGXlxKMIJVi0Gk/a7UTO29zbx7vuKUG26dhsjSmBKzJe2Pje
VwKlMcHzLBMC4+RvWhyJSpBzOkrigSGBX4ULDiumKIHp76i/0qvJ+8XBSx77
s5QgX8OyQVuOwOHOD7eMPVeCgV22zRwEOb9sP9AvvlQCm0pBiY8SBD5tNN+T
/IbUU7XsFS8/OR8lT+7vQErQ5ehWnDhOw7QSN+e9bCUY8ud6PIxoWPT9hfUj
DaQ/sj+7nsmnYb6cRNr5ZtKvDiUpw7k0PHu/iZ3YQepr4Ocfm0bDTSftt7cN
kvl5Pbjec4OGE5TBavc/sr73N/x0tKXhGGKf5q9lJfjgE7o32JyGw0WCBYK4
lEH9Be9kpAkNB82/K0/gV4a9JZ/VvXVpeE/tKrMWCWWQOitxQ1KEhhUuKRq7
qCnDtqu/02c+UXHOaQGVdg3y/K/nXvwoomITjwn+A1rK0FBlGn4/j4r3Wpf+
OLpaGdLe6vp3PqLiROoRr7NGyhB5nMPdIZCKV2bmJMTZKgOv2s2j5RpUnJEY
FyK7XRn0t12Z11Cg4g23QjweOipDsLWe02kpKnb2c9B/6qwMYxIpiugfBd8z
mfny9qAy1MoBpx65P6L8+G++3l8ZwsvvZnudpuDUT2qdLueU4cK38MObjlDw
mvdin9qDyPzql2/8c6Vgh6Tu6P4QZch4uTZJw5SCbx+5pjEdrgxfaOHJ5mIU
LLpYtYvyUBnqPyf4XkmVwoKMPW8dPiuD6ouysqJ8SXxsJcsq64syGMTlKStk
SeJKEZUO7ipleJI9mHcoURJHzPzkfVOjDLeH4/clXJDEohWndxAtylA4da7j
+SZJcj91c6r1tzLY++Nt6iUS+NT+E2EGY8rwn/nmS09fSeAfjtvlIieU4d9y
yQu+FAkca0xsNplRhpsPnp9wuyiBCdEndx4tk+cvvP15xkgCy70q0D8sqQLu
c9xJn5+J4+C0pPIPFBXopM/l8MSJ4/b7Ia40QgVOF54tWXlVHCdfNr/8WVYF
FC8/VqzcK46VnOpqNRkqwPwzF7peTBwzZod8R9ergJtDR2vXD1Gs+9/KFwF7
VWDjkx8ulxaFcJ6q518uNxV4qLwndnOFEN6wIn9r1EEVsNRdvf39HSFs2ujc
lXpEBbK3FD4o1RTCO0/GS9SdVIExfZ68JYcV+GIa4acdqgK/OtRdXz0UwDwR
R/C7MBWIj7qCLD0FcPipd8JmN1XgoPwK3b/6AjiWtSvNJVoF/OzsrD+V8+OM
5nsNoQkq4HL0Kfv5OB+uEaEZdueogHTY/uSTDrx4x9Tha96vVODWomztZiVe
3NLypnY2TwWW8j5PBo3y4L6nO46J5quAQXnQabkIHvL54O6DjaUqMHNp+YZZ
FTdW9qcs3W1UgesPBIz3unHhUx2SpVYcqjCv94A+k7aMKsr3fMjkUoVbUsaC
2/YvI4UX6e9W8KpC+vC+u2tXLqPKi0bZlYKq8M878PLrqCWkonzwrpWUKnQL
ud00DPmHag+9OmKlpgqqZj0W80F/kZrN3wOZGqpQ+FM4OO2/vyjYYMueFVqq
YHroyY3K5QWkwdtsX7lKFXwn7qwPvLaAQtI5jKwMVeGp4UKQ7b15tHrITtjK
RhUYBq+aWsjn49Da+3yZtqogO/NJ9NbdWdSW38uxYrsqJHFDWta+WRQWHjD9
ZYcq/EiXbpf5M4O6tB52WO5XBTWhtcNF8jMo+sToS8tTqrCy3pl9/jr5/D4Z
scMyXhUmhA153VImUFtTys6kBFWIftmxqtl/AlV+eLtrIlEVKnSdTz61mUCp
17tc7qeogoxX7WrT+XHkKmuwbyhTFbzD25977hxHn0xbPW58UIVEjVus+zCK
ctXHj7QjVYj9FLRlenoEPRLm9dQrUYVLuZF6U1kjKLBB16u5XBVecFCVm1eO
oNXHLvto1qjCknoK0+DfL/TgtubZLz2q8Nxp46r67iEU5m9yTr5fFTb8KvBe
lTKE/Hc7Bp78qQqltcqE2oEhZM84H7zytypk/6pbHOgZRHz5NSGe06qwf1t9
debIT3SyK+CGoAAdhJk2z9mKA2jfp4jwvSvo8F1QqhEN9iObzJSbr4TpMPJK
6y8rtx+p+X2NdJGgw+VcqvI/837Uxq8Y80yGDml8GrZ7AvrQ1lXlCZY6dJgh
3kXpT/YgZz4Lp5pVdJjepcuy+NiDjrV/EdmlT4e7Vo7lXNE9KOrmtxD39XRo
kWZaHVrVgxp+sj0ubqLD6D8Hh6Iz3WiweKcS32Y6zEXlj/ZYdKOFu03NEeZ0
WPIAWoZcN5Lf3GaTYE2Hr41Xa1eUdyH3R736b3bQwbczVUVWqQv5Bxz+vdGZ
DvFXriOT8U4UZvszrcSVDkxOfYuAlE6UvTgsXbOfDgsBAuMn+TvRpPOfpWFP
OoQ1+5fs725HlyU4vypdoEP9lpmRl19bUezg5atPQ+iwf+XnspnIVpSOeEx0
r9Bhm/K6FoftrajyuMCrjWF0mPLzf7C1tQVJVIrF7Yyhw+YE5/C5v81IJeW2
fXssHexcA+I+lTcjg7NSK9zj6HBoJrEnMaYZOasR508m0kG5+Li/u04zenRZ
4VBEOh1MFELLVvk0oVyXR3JSz+hwa4/EenXTJlS2WqXhfhYdzo+vHJKnNaHB
Dobl05d0sFHe3cb9sRGt2qizqqSADhT1695RKo0IJF8MWnygg95kbtSefw3I
YWj14++IDk6v9DcoNTcg/zgDansZqd+0/v0rdxpQ8eTGv7PVdCjq81RNlGpA
KVXvDjrW0uHjU2fqyGw9upq2pjLnBx3OmQSkCbfXI8tdWvcPN9GhSTI1/PWz
eqS9+inHxxY6cGYs7Nx4ux6JCqoelWunQ+SWsc+R5+oRu0Bm/Y9uOgyZ2avd
salH7+7cS9bto4M5HGrdvL4eJXhL8oUP0OHTrFoZUqlH+xVW1MMvOqz5LkLe
u9jIdPaaceIIHUKPxCR2D7ERvYYzdXaMDlo7g3YFNbHR8KX5UzlTdGgwCk/l
fM9G31zPtAjO0mHvzLYdIxls9HLNxKbD83TILNymnJzARjHCx5/hv3S4eLwp
TiqSjc70D4rLLZH1HjW22BbCRs7F7mcDOBgQc0O51MqPjYziujrruBgg/9D/
pZAnG3FYNuXc4GeApXNabYMTG/UqO9H6BRmg6M13ocuajcoXvp8HYQb82mwR
mW3GRhk/rPsfiDLgS0JOoZExG93M/mwzK86ASsb5T+Fr2ejENbPXDlIMCCuZ
PJK4io3s9yHZHCoDWji8/X2YbLRm/cYrgtIMCFBd0cKtxkY08XfD7jIM0Czv
CHZRYaP5QX0HLMeAgqsLFr6KbNT2MSdfVpEBkwvHNSzk2ag4gakcoMyAxDJL
3m5ZNko5nR5Wp8qA8+eTvxiRfNVGZVxHjQHej5huO0j2YCTvuqHBAOFTahWr
5djIcmkl6mMywN7NXfobeT3txrtqoMOAtmpeT6YSG4m9lIh6sIoBO5W16yxU
2ehPWOT0jB4DDhTOeWmosxH7gOBeBwMGPOaItP2ixUbvjK6VPV/HAOy0IkZL
j40SpDi1BQ0ZIHmQy85uPRsF/w6+476RAbcz7740MGGj/Z/mFtB/DKidGVho
3UL6IdnvoCwwwKuk7fQWWzZiBIx/8TdlwGLY3gMnd7GRgL23Xt1mBiiV2wm6
HSD9oTEYr7OVAT7T919JeJP+4HTnuGHJgIgYlUehAaQ/WjqP9FkzgH9CUhZd
If2Rt/s7y5YBnJ4C5wqjST8cdkyecWCAoIHXY87nbLTR5Duvww4GcLv4O9oU
sZECYX38+S5S746gl3uqSD9UmBq772HAvlevDGtGSX219VtqDzPAI9GcIv5f
PTozK7Ow/ygD7ic/YZ1wqkfBJdwyo8cYMCd2oSnfux7ddK53WeHLgOwN1Wfl
HtWjGNXic/GnGJDwm0pdW0j2y2j6fbUzDLi4ydXdpLEeZVw922wayIBnnrkS
6pIN6IXdgfmaYAao6iR4Ceg1oLcyViv3X2TAsmuET4d9A/r0UtYl6CoDOpcl
j3uT/d/TVtyUF8WA57zba3TojWjo6dO5TbcZsI17o0GdVSMaPxUtXXOHAU05
G038TjWiZYGDzr/jGbBBwEP5bVkjklvL20R/wgC2wdxRxzNNSJVjdDY3jQEy
YdfT+FObEPNrA7EpgwFpd8V7S380IcMDGbv2PmcA1yMpJdd1zWhnpHXj3XcM
WP16toUh0IL2OhvMqhYwoP7dnLMpqwW5q8oTuUUMWBVyyPtUQAs6nT+6s/oj
Axa+HsmX+tWCovtvN/BVMaCwKDDzemcrinsZOBNbzYC4xra7xxXbUHLQIZpq
LemPna2dp93a0HOJtTtZDQy4urT178/+NlT5X1N9QBcDQtb2qCcttaNagY/T
vL0MMNmWav96awdq+vGMGttPHj95avX87Q700zNox8thBlz6wFknyexEPPcU
6genGGD+0zfQ1aAL/TfqznYRVAMPNCMTH92NaIVbHxcJqYEktonrLOxGo9eZ
voqiapC6p8nh7c9ulKw8LtQvqQYTsjrqlE09aMkpyMxXTg28PaUeP1noQajw
dm7oKjUIOFjn//hGH4oP8wsZ0lODtQbqB7SK+5Dvjl22NgZqwHPvV+a2yT6k
NCY3LGGoBrFnnbDb/n4UopKhnGSqBh+PhZ2vMRlAm24UR+ftUIMEEd5/drKD
SGZnyj6asxoU8xxf8cplEP1Ruap9zlUN0i+4LeTFD6LHRZYVJvvV4L+woDMp
0kOIa5y9/OWoGlwNLaBrKA2j0p2/TnQFqcHx++v3Wtj+Rlvo0ttEHpPr5bCI
idhx9Hrkk7J7qhocMwtcavswjujvTs8UpKvB22rfVPmf44jH6vvDo1nk+c5b
WMlGE6jEJ/RP6Ws1GP2sYZDaP4FMCqfiAj+rwWpfWgaXzSTKufrYu/YLWZ+j
O5P2BE4ieVv7TRpVatC8OdJQ/NkkWuzKGq6vUYMs3hT2Nf4pVMB36D+9FrJ+
mcyptxVTaJ1Dbc/P32rgFdDamrRnBqXLXnxnMqYG9VduZH+JnkHUfu2IuxNq
0HKuwGzXpxk0FRC21mxGDW4wB64nrJpFuUmssORlNVi6KxZWLzCHVg0919kh
qQ4hZ9pLa6vnkUZI+NmS9eqwy0J4fvbFP1S0MY3XxkgdNh+SGP88+w/Zz6KY
emN10FI73b8GltDZE9PZg5vUoTKvZuln3RKq2OPWLWqjDjNfufL/Li+jo4br
rHa7qcNGxoGQg/9x4md/umWnwtTBQi56kJ+TB5vkLGacv0mu929r7uvVPLjO
k1jHH6UOQuulvSvdePBCl429zB11EJd93aBTwoOtvr+7Cknq0DnsqJd3gxcP
Z0WORLxSB8qMgWGqJj9mHjZEjBZ1iHA2SL4UvgLfUrFduNKmDt3T6sVxRSvw
VOfBtT0d6vAle23zxdEVuNg1Iiu5Vx1anz4Qy9suhB3sO+OIEXX4l5oGq6jC
+NzGa76CHBrgP6rQXRQpgjvm7mcd4dIA7bbHYF0ogk3f5gx84tGALr337hcH
RbCwXtOey4IacODDPp+GTaL4kZqW5V9JDTDce9Z7/bgorpCoVR5haMAq4WPd
M/LiWOd7/x5rDQ1ICEtuHtYTxzERC3HPmBqANkkX520Rx3v46aIeqzRgT/5u
znJvcTy26L/QsUEDMjlZQvPvxTFtUO5HjbUGXBJ+dJ7TSgIfLj569fVJDfCR
s9TL3y6JR48PB2zx04CsVRrmPgcl8Vl5b68Gfw0IlFx3huu0JA4P9nGYC9KA
ww/vZXy8I4lfGvkrGYdqgLK8xq3nPyTx4tsrRaUJGqBVO/D8yjYpHOrB+9Ip
SQNOX1VvX7NHCovRrj/pf6gBkyxRmfJjUljlTHg4f5oGONnCk9vXpfDWNbed
rV9owHRyyUQlksIxL5Kn6ko1wFrymsU4k4Ll9isNHirXgOTLuLtpPQWniT5u
naog6+MXeyh9MwW/P55WQqvWgM+OKo/H91Jwu1Z2tGuTBugUvPHYcouCNTLy
tXt+a8Auvt9p/CMUjB6x3SeomvDnzt11YXepuMtGeb+/tCb8MO5tEn9IxRzz
x13+ymhC2mw/7+UMKjbdzm/Lq6RJPk9iUCik4nJOo/UrmZoQ8qWaBzqpuOrg
Q8FNJpqQ/nny4npVGh4R/c1dDprwzfngE3stGhYt3LBkZaYJyu1/DzmuoWF7
qbo/Thaa0LzeTZBmRsM/SnnajjqQ11ulJBxzgIZb6Mdyoj00obRf5pt/Ag3/
rXmbQfXUhAiizHBNCg3Lned+kuBFHp+/EdPylIb31ifGpfpqQn3E1sPDr2m4
69r3kPeBmsB7R0FBopqGfw4YOHZFkfGt+bk2epGGBe5c2nb4tiYU9S4/5eMi
sAareuvwHU2wrOqK8uQn8LG4I8ZT8Zpw93SI8rQEgUe3JjAEnmiCK986PTU1
Ak9lLM+uekeyekQRnzWBB3aaP7qRrwnajUF+/HYEbuKJtOgt1ISJSZWYOQcC
F7rJ3L+HNUFfOM4+25XAl6XXGv37ogm3K5yJPZ4E9isP6tlZpQm4ZKdRjzeB
PfxKwl9Wa4IPreWwiy+BLWvsWg/90IS2DdfpsgEEFg87FlzZpgkvLdUPjV4h
MNe6V3R6pya8P0b9vRRKxtc7W3W+WxMCRxwIznACN7KuyesNaEKsSndiyy0C
J88+LI4b04R4Kdu9fQkEjk4b8JiY0IShw04TV5LI+Bx1xKynNGEpp+QN9RGB
D78o2L80pwmDa4rExNMIrH2knuMwFxOWj3t8PpBDYAWq3LNiHiaIRI4mxb4k
4ys9uF2anwlc5u2qBbkEnlQYT/kqxIStmQ/82t8SuKBhhZk+lQn3mRJpocUE
zr66/ddNggmT71xP22MyPv34O/0ryeu53NkrUkLgS1GMvngFJmhNZL5x+0Rg
C3O4tqzOhHA3obQTXwlsNBWq48JkwvTDQ5F1VWR8j7/V52oz4WaM8LBmNYHF
llzVPPSYIOCdpZlXQ2CO7JRqtIYJPZtK5ftrCfzHZdB/5TombDrLnbniB4Eb
3pz5XGVEHtfozFxdT+CKQ0U+av8xwf611yq9BgLnS3BLh7DI+Eu4vBmNBM5E
lrh5ExOc2hKPijQROPF49NE1m5mQoTquPURylGyjeKQ5E97jyuL3zQQO+SKf
P2DBBP0KZdXg/7/PZ2QJJmxjAt9NakDH/79n+LTvmJo9Ew5urLYMbyP1OSz5
NdeBCRpb+XrV2wmczluuxdpB8jZRy3ckF6Wdi/i6iwnq/Gsub+ggcN0WnZFd
rkzgrPS6k0XyYH/Xtr49TCj7uOOieCeBl67F5vjuZwKzxN7iCMkUNQuxfweY
MJJcNP6CZGb5X58b7kz4rDUfOEwyeLyooR5hgp+xxxCti8A7+Q7pPfZkQnbq
IZO1JB9Pp8XoejPhbrF98BaSr5pX/ik4wYTegZjU/39vkjBw3nHrSSb4D/x9
s5Hkl6F6r3+cZoIR958cZZLL1fopbv5MkL3SGvn/71vayuPP/D7LBO5she2l
JP/xsGk4G8SEjlLl2QskC/BzrOe9wIR74tYXtElWfJoXdzuECdJNHP1fyXzX
bT0yJ3+F1L+RS3MvyTY/ZVwyrzGhU//Eli6yXgevV+evC2NC7K43BjtIPqt+
WaY0nAn/5VlNFJL1jvq8NsgukgnH8h6doZCcemSotfUWE55/0izaR+pTwJ9k
fDSGCXG7nFECqV/tU/ukqVgm5Dckn6sg9R3cyrMUEseEmAzB/p+k/ks/3+0T
SWBCKqbPz5F+YWooKqk9JOuz+sP0GOkvqKgLyU1hwuvAg1/r2WR9j4Z2m6Qy
wfOkAP056ccrGSOPdz1jQrlF+obVpF8TLFK4+7KYEGFW3d36naznoJO7bw4T
nGUDBs6Sfm/TKGLcyGPCRj/3qlCyP/5U+IRS35J+C4yPmf1C1s9T9WfKeybQ
EOuCSwWB1z4Lzyj4QPpN7POt8TIyf00Xrd+fmbAgmiZ37AOZ/xfhiLOVTAha
px52sJDM3xP/5vnGhAZjWop1PoF/PlPPka9jgvluz9ix12Q+zJnVdm1M2C+l
eTs4i8yn8tnt1g4mWDR2BMxlENj72N4/R7qZ8Gx5IdA9ncDxmWV5IQNMWLHA
f0k4hcATzDvrcseZYGM2sS7hLjlPq2CL1CQTTj/aFFERQ2B8YtTRb5oJ7g7P
/QbJeRaVa3ly3QITfEfi3i7eIOtrxJFdwK0FxkeXm/3OE1ii7XmBLJ8W9P2U
eqUTSOC587u/BAtogekRnpBGf9J/H98OmIhowSIt8e0/H9IflseVS2lakCgx
6BhzgJy/v2RW01dqwf8aKhdvqPMwDk/K5i5zk4psUk3f31cIXbR5xY5jiLY6
YaI9iaJVJJfQdSuUS5SklNCcJGVNoYj9vaVztulyUiiLUjbKrdFlEIb1Hzzn
ec75fH412VlRH2CM1mmPVh+fTSBtfPrOCb/JvvUW/m7mBMoPxsXSyb3P9W3J
fiIiEN3p+VzhbIyNO9z0GldN8ixt2T9gOvkH2qpZ9k4EXltuHhKZGGNhSaEo
25lA9x5l6Hq+MUYo1WJfMYEpa5Vvw3WMUT+2/EibN4HeYFlxi0qI4sSfhz4E
Eni6b90Pf4UQ6aLnmuJgAusXkuaEOiHyH+/nF+0gIG1/K02uFWKHfrNNaBiB
+UXJI6FyIR46mx7WH00gaTx399ocId6Vjb5XJRNQypfHHwsUooNL1JAkhcDN
WxG2OZuFWPG+Ty8/jUDnRsn88xuFeMvs7TLJaQJP8p9FBYqFeCMH0/JyCQQk
7dUxEgkxP/X4CrdSAlFzy9X1PQI0I+NeF8sInL17f6G8Q4CXFDFBX25N+kmr
vXygRYAXfgo5lXuHQJk83bVVIcCsw5JOJRIIuSNSFhUJ8ESUYWZOAwHO+i8R
Cb8LUIuXfLW/iUBHart01iYBJso5NWuaCZwm3x7IPAV47POXrr42ApdlFa8S
VgjwYEjjKucuAo+HGlNtuAKM9D//qXuYwIn4e1dKWT5KXS3A0YyBsVGNFTE6
fFQ3ahnUmTOQ9SCiLkDNw/zgz60SCwZuf1zqt3iAh12JVbHSRQyMk+tGkU08
jFR4/xVny8CnyN4XlXk8POm13+yumIFNL8/f6SU8pO1b+5zcGZiCSxwNTHlY
H+5W/Y8HAxvEmdlcAx4KM7mbXq9jIKzE6g6r5GJhw7W0QSkDofHGtVfkXKz2
bRqzC2dAv+CUwGMJFwO6qx/X7GGgeGxlb7AZFznx+TmuUQyoP4zaBOhzUZz7
h93GOAaeLSj3ae8xwpdvpoTtPcoAUxXmaykzwp5Aq1b5OQYi7QYNJYZGOHtX
UpUVMmDDtv8mSTbE9Int9ikPGNCd26Mu3GKIGqfF8o8PGShQv7lQYGeIPZWa
xfkKBjrNydP0dgOs5hzL4TYwsPrAqn3zbAxQmnU4drCTgfLYRwahdXqYcy/O
/m9dCrhT7uMg10Y9Lz/5LAMKMVecLUsOauPhd8tp7AwK0zLjpws8tTFEc3i+
tYDCqHFVa3uXFi7zjuEXmlHY+i538fAcLXzVEfntuA2Fiv6gs9oZP6FAJ0y+
1oeC9xO0c70xFWUuB+IH/CjECkX8rwlT0fZAussZfwp+dg6VRp5T0WugrKl5
KwVPB16brF8DE1+pfmwLo1B70kNX20EDhwsPrYk/QmG3pcmMzy0cTGzL0DU9
RqEn2sVtk5yDfGFhI5tIIahbFGCezEHrEw+3a6ZSECmjVI0OHAwN107JyKbg
NFNfucxmgm1xPNNwtYTCuYVlQ2b/jrEh0bKL7qUUKl257hqZY+xgaUVwXxmF
/sv5J4+6j7Hcec1DNpUUqq6vGvGpGWU9tEzn1CKFr7ZJBfziEbam8WpQQxOF
BfcbNu64NMxKDO7SmGYKJgX/Cf22DLPNborBma2Tvq5Nt38+d5j9Xt2bvOUd
Bfc8TqmLbIilBdY3u3soWJr2HrK6PcjWtDjHpPZTqOdAssW+QVbC3+C0ZICC
4+JIadYvg+z2pOgXUSoKWiXqF50KFfsdEy8YD1PIrhm69zBDxf45cm5b9QgF
f9HKaXN8VewMu2ImQE1hYk3J+565KjZvV7VqYoJCZkr/GetP39n/AYTm57s=

      "]]}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
W4so2yTrjehxBma9EsellLCIvvbmZSRM0nGSXHqcaOYiUrQ0/WgcO4TbLv33
9s9/i4hxvBlRxvvxEQm5rizpJTRvs99Lp+k31nYu3i2ft4ScTpKpzpNluIn/
v2r+iiXklvAnbVcJxl6F/RYrbUvo6X2BHufvBTiTl8ezY3UJlRTs7Q/KfYE3
5lolxRn/Q5wX5B+h2/moxNZDJfTUP8R1JWCIx7IY2bAHf7rk9Q+Zz2mHHlqj
oTirN3VH4/+huh2thcYelYhrbXaVq/8f8t2lOCH5vgGlpnNHzs/8Q8u5199W
bWhCBsdlxemcy0jEPerA3svN6HqqoXrZlmW0E4W/XhJuRZKmVsU5sIwWBwYj
vSza0KcF9wMvTiwj2SVJJ6kH7WjqcOzpG37LqI3T9KY34ze6N5s26h61jN56
bm015+pCKsmfr9okLyNn1q3iTRu70dm/fQ92fl9GBY2EFLt0L2p/rEH7I7iC
Tu7FwRtY+1FiU5aAr+IKat4hHMDj349s+DedXtJZQX4Urn0RE/1M/pVdXee0
gko6ij661gyg518eH7l7dQWZXtQdYGwbRPaLIs95o1ZQUGXPyrZHg6jXk0df
9OMKkvl7772D6RDz3rgd+bh6Bf2IDbzinDaEHAdZfst0r6CYDReSvBeH0KD1
vJ8i5yq6srZ912AsHaXGeVdnSK8iM8mEp+d+05HLf+MSWzVW0b1dF622bRxG
DMPBAm3rVfQLuYf/ejqMMoJOcxZfWEV7wu7Q6pqHkdvnDksUsoq40uv6DvMw
kOqsRVpZ/CryjQgDO30GGlNvmD2QtYpGomibBNyZPOtmsv8HXkWtyKH/cjwD
eaZWxpk1ryK5oh/FT5h8o95rMNjMWEUfzLtHHgww0JTUFy3rlVVkKyye6MxO
oBwLndAuoTVU1Tg7raxAIO/o/MYzSmvope8iZQwRSKtWnULXXUNqd9GxYia/
zrBnXXIzXUOO+xqi0zwJ9BGUvk44raG6P2ktJTeZPBjwUvDytTVkOXFAjO8h
gXZ+knGYj1pD9Di9fWnJBFqYSngf8HINJT7bciwhk0BFqiJrax/X0PWqWoXJ
XAL5u9w/eqtmDbFyhLuVMHlV7yV3ElfPGnLITS/jY/Lo8u9b41HTa6hexbPh
D1Pb8wYnca1ngbAfMjuuMnkWp++uMOZngZM20RFvCwgkb/RvPEqCBRYqNTa/
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
xlPSiyaSDEvxLWb875yCd+zoRZPtwZy14RKw+dh3uYQTPeiv6eLTvlgJsJv4
WjvN3YXm9UbK+dMlYC3yWNcJtja04KskIJUtAX61ngnj6S1oKcfRWjFXAqoC
IowcDX+h5U2/x/VKJEDpgvxhG7tGtE70h5hrvQSEmFyzH5GsQutNuc74/JKA
MW+5/rfF5Yg9wjArqEMC/HP36Uke+Iq4WEpR/KAEzJ1R+/1dKx/xj2WfL1tg
1u/n6Z5gh1QsuGkkt25FAnZHEnbNvblYyFFppX2dJNSL/vI0NijGom1JMVMk
SWg+SDm3bFKBJcsffJYlS8KqcdbVj27NWGqtdr2ykiSEZSV6os4WLKPLZbpd
VRLcDQeL2W3bsdyH4AHjHZLwWWsWlQZ3Y4Vnl0jXDkmCSPvLgomCQazUmm0Z
elQS/D1T2xU30fEm4ZEX909Iwtte+zyH58NYJcxxR+opSVDKvZq8mDSCNXxO
2DdekoTY2NBzTwOmsOb7B+ldvpJw7oHx/humf7DWSO1fRoAkeEUY7BhS+ou1
HQzvrt1m6tSHE9t6p7GeyY4PaomS0MGqMxUbMI+NFMTX3f0mCTGLX34Y7FvD
hOOBdL1KSXj5Kqy6ToqFFvXy6tGpWkkYi/DY/SWOhdYk15Zo/UsSnoYjX88I
VpqD5BMtNQZz3I0vW9ePjcZmVd3eOyYJCfn2Dh9m2Ghp8YtBj/5IQqjVIj3r
4nramIgN89kjCUNRkvzHndhpfvzSzg18UmCUsLnquC4nTebIYd47wlLg4qrV
xJ3FSaNFBuToiktBaKZCkpwkF42Du3PltbwUnM0fyuQd46JlHCClWClKgYi1
GqFpxk0zuaNvzKciBZJGviInP3DTHrI9j/fVkgJpsQ0HlJx4aDsMfuqr7pKC
/o+XeKU+8tDaglf6e/SlYEv9mx/PWXlp1/GW8Li9UtB1KOWhzUFe2sbVU+qH
jKSATaSZbSWMl/ZN//6vFWMp8GTV1dUu46W5BHwJyDWVght2aRqlc7w07s8T
5HPmTP/eiiWZUkm0twtyVdLWUhB7JP1+7kESzXSnqWf9KSkAbJiW50Ki/b0S
JHrbUQrau3OsVW6QaPH57z/rnJMC8a3tLPORJJrOdI/DhLsUZDVsOc8eS6J1
bhPkfO0lBS0nDwUffkiiBXtB9skrUhAsw6tXE06iUd97nSD5S8HqcXLoPT8S
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
94+fryPGb5bafsP/A1ZhPr0=
      "]]}, 
    {RGBColor[0.5, 0, 0.5], LineBox[CompressedData["
1:eJwVV3k8VO8Xtu/GmJlrJ8YylpmsKZJ7kpQlFCKppLInSQoVCZVUlIRKiFLa
qCjbfbOE8pUskWRPyL4v4ef31/2cz/Oe97znOec+n3MU3E7sOcbBxsbG4GRj
+/93tqOmQulagjGbjXuqgsXj0qZUieCtrQG4jnnI8pGASAKwr24SrRE497q3
5yIDEogg22ctnK238FOqDpqPTmUSoqPitxZaMnDHRyNFx8++JTqLrU9Mt+Th
chupzHfXKggzpaFfEy1luKs+9aVOaxORaWvtlOtXjmPNbSdvRzUT7OfzGvy5
K/CdGmoGN3S/E8XNIVVjOpX42+V59iPxLYT2ZcHcketVuInfC79V+zZCZogZ
ObitFt9Kl/0Us9pJLLRsvDPe0oCXtHr9yV7+TbzX4XN9otaIu2SkeYh59xNB
11vVD4Y24oJqORbrWvqJSZNg9EWuCS8femjM/+YPMfSi8O/jY814IdVL6XDA
INF+aYvJgakW3NGqvWJZZIRAmtvGaki/8CeeXjBwdJIo3/Yk81tGLz7Pbcsn
yLdEaN14NThX3Yt/q3yfdslqiUhtLVgvN9aL3zwk94wVv0ScPV793ntzHx5x
gfyNKv2PWH93sJazqQ+/sVg4KqO9TKQMacxs4O7HN1ju2tB/bJXwj3+9PcVj
AO/nTjctWmBHHT/fx6DrA7jJXu1GwXUcyFLl49f+NwN4lFnw7xBTDqRS9G2f
Ltsgzt2prfH+Jgf62Td5vDZpED8/LMmqYXAis00bEldqhvA9s3yi5oe4kEzn
h3435ggeeopGG5zlQWxTJ5Nqdo/gw/2HAnoVeFEfj7qF1pkRfNuxJU+tXbzo
xfqUF8sfR3ATlNtbm8mLjC+EBCY5juLRboPLLk586JDsZo66iDG8CavnDmrk
R6baU2/0ssfw7T87sme5BJDq9pxj9/4bw38X8NYv6gugs/nXj+oJjePr/jyP
u3dfAEHHchW74zguyZjflO4niL6xOm7cHx7HD+QWN9ZqCaOKjYV/bFbH8WG7
lykqvsIof2sicFIm8H0TQ+8MsoVRioP1pNfGCbxMPpGRSCcht/OlDhsjJvBt
WgXubvIiaLI2VaZBfBJ3UvXe7ZdGRn3fQ05HqU/iUQexv/QKMvretbdu05ZJ
3Fpxy4rmABkVTpPCH7pN4uv7F0K2a4uiSzJhvb4vJvHHCvsNGj+JIprvoWe8
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
v+6Z
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Method->{},
   PlotLabel->FormBox[
    "\"Motion of the Overhead Crane\\n red = y, blue = \[Theta], green = v, \
purple = \[Omega]\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.6065904335654593`*^9, 3.606590484726905*^9, {3.606590527903288*^9, 
   3.60659054710636*^9}, {3.606590669355356*^9, 3.606590679146146*^9}, {
   3.606590716346045*^9, 3.6065907501984987`*^9}, {3.60659078496659*^9, 
   3.6065907889393387`*^9}, {3.6065908364167967`*^9, 3.60659084465067*^9}, {
   3.6065908832243767`*^9, 3.606590911011647*^9}, 3.606590974133911*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Control", " ", "when", " ", "offset", " ", "from", " ", "equalibrium", 
    " ", "by", " ", "\[Pi]", " ", "radians"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", " ", "=", " ", 
      RowBox[{"-", 
       RowBox[{"Chop", "[", 
        RowBox[{"xgains", ".", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x1", "[", "t", "]"}], ",", 
           RowBox[{"x2", "[", "t", "]"}], ",", 
           RowBox[{"x3", "[", "t", "]"}], ",", 
           RowBox[{"x4", "[", "t", "]"}]}], "}"}]}], "]"}]}]}], ";"}], ";"}], 
   " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y0", "=", "0"}], ";", 
    RowBox[{"\[Theta]0", "=", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "10"}]}], ";", 
    RowBox[{"v0", "=", "0"}], ";", 
    RowBox[{"\[Omega]0", "=", "0"}], ";", 
    RowBox[{"tf", "=", "15"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nodes", ",", "ics"}], "}"}], ",", "ans", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ny", "=", 
     RowBox[{"soln", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[Theta]", "=", 
     RowBox[{"soln", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nv", "=", 
     RowBox[{"soln", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "3", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[Omega]", "=", 
     RowBox[{"soln", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "4", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ControlledPicture", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ny", ",", "n\[Theta]", ",", "nv", ",", "n\[Omega]"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Purple"}], "}"}]}], 
      ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Motion of the Overhead Crane\\nred = y, blue = \[Theta], green = \
v, Purple = \[Omega]\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"f", ",", "y0", ",", "v0", ",", "\[Theta]0", ",", "\[Omega]0"}], 
     "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQHeLdfZPl3ivHT2bXboHoV7fLv4HoAu6TYLrt41p+
ViAtHPJbGEQfuTxZEUSvWPZHE0Sf6q02AtGHHOZagGgVlaNOILou9AKY/sJV
UAqiC27/KAPRCY+T+0B0IOvhiSA6OnfOBRBtK30STL857/0fRLMHBIDptPl9
e9mAtN6x3WD6hSPzXxDNwBsGpnlUTLfwAenl0QzbQLTb6Xe3QPQrySt3QHSd
XvI3EM237DmY9nucLKoOpIviM2VANFNCH4MGkBZo62QC0cZ/bV50AmmJbWff
gGiBT+vq2e6/cryS2NsGokVXPpkNojcIxM4D0WrxhxeB6HspDctB9KLFEzeA
6D67OWC6I7FhG4gO+MCxHUSvMVXcC6KnSNzbB6IB0MLJ9A==
  "]],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwVl3k4lO8Xxu1RkW2QrDPWQUWyhecMUpZEESpL2ZesQ0JlT9KmxZIoe4hJ
USiPb7JLhWSJEhXKVtYSv/f3z8z1uZ555z33fe5zrveVPul/yI2FiYlpnfj4
//ficOsrmUs39dVGMkN3bOvBPVkiZ2h9QUiH61X2H9EeDKQ3J0X6YtA5NbWa
4wQLDfJx8Rolo6PyM9VHtvbgUMviD6x9KUiYvjd3QrgHn3jcXrx+ORWVBpuf
EBLqweZCU2f/Gmai3aXDY0MCPThT90LR38h7aERfXZzG14P5poVTVj7kIOnX
XUvA04MTsosiltTyUYALk/Pwxh68aqnttnC5EDWu++mLbujBQSxtFr/HH6Dw
b48jFlh68Pjjo1pzhqXI9CnHWsBaN3Z0+yE9k1WGAspOF11e6cbem+riFyMZ
aOu1aQfz+W786bmF//yHClR8bJvv4/FunEESdg1mf4KiHFqjHb50Y2u/T3a/
1CqRlniV2MPBbtwmGWAwe/kpGqqtNYHX3Tg+TEvTv/YZendA7HJ8YzeGd0zK
0+PVyFcttCr4RTeuirlO+mn4HEWJD/BblHbjgEH7jT6BL1C/ZvjkntxurKRO
Xp/IqkNa6m5z79O78dsg+/nfkfVIXzOtmS+hGxvLTA7NfXiJrh2O3IqPduM8
Swu7R34N6MW+p59kDnZj5rMVXQHsr1Asc4WKnmE3fv4+vHlGrRFZXpoMT6R2
Y9ULmx5NXW5GSjpWjtkLXfjKY3+lhzItyO3PheGy713456fufN/aFjSS77IS
2t+FC7QyM36Mt6K/X3b/3fW8C4tNKsdNGHagCxebm0LOdeFwoetrRQMdaIei
U62jXxf+YLAQ5hn4Glm5CZA5HLtwyp0Xp75ndSJBof/kb+h24Ti5wpJfkW9R
p2XQYPXiO7zyQfPW7IcuVK/7SbzX6R1+psbpXKjYjd4aGdubm77DoZf7qI4R
3cj376XiGPV3+JfBmfp2iR7ExGm7osb5Dk8+rPlR4PYepVtYf64ufYs/xuoZ
OPz+gIwO7cvV7n2D63cYzrTyDKGzXqe1BuM78LkkgZoo5yHk2v3aj8miA+t+
HY3TrBhCPdMnyvtJHbg6I04032YYhZW/8C3La8cV7E17ozI/IRIpI3sTbsNd
p2QstpFG0BmlPRvHvrfgBsPCvHc5o4j1u9UzDcFGLPap+ttJ5Sk08Npda4n2
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
      "]]}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
/qnAys3RhjmxA/h/Zbf+aw==
      "]]}, 
    {RGBColor[0.5, 0, 0.5], LineBox[CompressedData["
1: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
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Method->{},
   PlotLabel->FormBox[
    "\"Motion of the Overhead Crane\\nred = y, blue = \[Theta], green = v, \
Purple = \[Omega]\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.6065909613322144`*^9, 3.6065909674181833`*^9}}]
}, Open  ]]
},
WindowSize->{640, 752},
WindowMargins->{{Automatic, 186}, {Automatic, 32}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->FrontEnd`FileName[{$RootDirectory, "Applications", 
   "Mathematica.app", "SystemFiles", "FrontEnd", "StyleSheets", "Creative"}, 
  "NaturalColor.nb", CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 281, 6, 56, "Input"],
Cell[CellGroupData[{
Cell[863, 30, 3431, 84, 277, "Input"],
Cell[4297, 116, 2321, 48, 58, "Output"],
Cell[6621, 166, 1565, 25, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8223, 196, 2705, 77, 107, "Input"],
Cell[10931, 275, 2461, 48, 43, "Output"],
Cell[13395, 325, 2319, 44, 45, "Output"],
Cell[15717, 371, 2444, 47, 65, "Output"],
Cell[18164, 420, 2755, 56, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20956, 481, 1166, 30, 56, "Input"],
Cell[22125, 513, 1773, 33, 41, "Output"],
Cell[23901, 548, 1827, 34, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25765, 587, 876, 22, 56, "Input"],
Cell[26644, 611, 1959, 36, 41, "Output"],
Cell[28606, 649, 2039, 38, 45, "Output"]
}, Open  ]],
Cell[30660, 690, 322, 8, 38, "Input"],
Cell[CellGroupData[{
Cell[31007, 702, 3136, 83, 158, "Input"],
Cell[34146, 787, 831, 18, 58, "Output"],
Cell[34980, 807, 1037, 25, 58, "Output"],
Cell[36020, 834, 619, 11, 55, "Output"],
Cell[36642, 847, 718, 15, 58, "Output"],
Cell[37363, 864, 575, 9, 58, "Output"],
Cell[37941, 875, 621, 11, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38599, 891, 1713, 40, 124, "Input"],
Cell[40315, 933, 2246, 42, 90, "Output"],
Cell[42564, 977, 2230, 44, 110, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44831, 1026, 858, 18, 56, "Input"],
Cell[45692, 1046, 2124, 42, 110, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47853, 1093, 508, 13, 56, "Input"],
Cell[48364, 1108, 1232, 18, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49633, 1131, 897, 23, 73, "Input"],
Cell[50533, 1156, 682, 13, 38, "Output"],
Cell[51218, 1171, 1338, 31, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52593, 1207, 284, 6, 56, "Input"],
Cell[52880, 1215, 1771, 34, 90, "Output"],
Cell[54654, 1251, 1681, 34, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56372, 1290, 1001, 30, 107, "Input"],
Cell[57376, 1322, 2426, 57, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59839, 1384, 669, 17, 56, "Input"],
Cell[60511, 1403, 1824, 38, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62372, 1446, 81, 2, 38, "Input"],
Cell[62456, 1450, 2039, 42, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64532, 1497, 513, 14, 56, "Input"],
Cell[65048, 1513, 1649, 32, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66734, 1550, 498, 15, 38, "Input"],
Cell[67235, 1567, 2043, 48, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69315, 1620, 1022, 26, 90, "Input"],
Cell[70340, 1648, 1187, 19, 38, "Output"],
Cell[71530, 1669, 1406, 26, 38, "Output"],
Cell[72939, 1697, 1416, 27, 38, "Output"],
Cell[74358, 1726, 1240, 21, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75635, 1752, 1574, 46, 124, "Input"],
Cell[77212, 1800, 1913, 42, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79162, 1847, 703, 17, 90, "Input"],
Cell[79868, 1866, 1159, 19, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81064, 1890, 365, 8, 73, "Input"],
Cell[81432, 1900, 1918, 42, 56, "Output"],
Cell[83353, 1944, 3049, 75, 90, "Output"]
}, Open  ]],
Cell[86417, 2022, 1241, 30, 107, "Input"],
Cell[CellGroupData[{
Cell[87683, 2056, 244, 4, 56, "Input"],
Cell[87930, 2062, 1244, 21, 38, "Output"],
Cell[89177, 2085, 1332, 24, 38, "Output"]
}, Open  ]],
Cell[90524, 2112, 417, 10, 38, "Input"],
Cell[CellGroupData[{
Cell[90966, 2126, 95, 1, 38, "Input"],
Cell[91064, 2129, 1014, 26, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92115, 2160, 97, 1, 38, "Input"],
Cell[92215, 2163, 986, 26, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93238, 2194, 102, 1, 38, "Input"],
Cell[93343, 2197, 1322, 35, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94702, 2237, 102, 1, 38, "Input"],
Cell[94807, 2240, 1300, 35, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96144, 2280, 1741, 39, 141, "Input"],
Cell[97888, 2321, 1487, 25, 38, "Output"],
Cell[99378, 2348, 3590, 84, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103005, 2437, 862, 21, 56, "Input"],
Cell[103870, 2460, 2819, 66, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106726, 2531, 1111, 32, 107, "Input"],
Cell[107840, 2565, 1386, 23, 41, "Output"],
Cell[109229, 2590, 1387, 23, 41, "Output"],
Cell[110619, 2615, 1948, 41, 65, "Output"],
Cell[112570, 2658, 2137, 47, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114744, 2710, 1100, 21, 73, "Input"],
Cell[115847, 2733, 3454, 83, 114, "Output"]
}, Open  ]],
Cell[119316, 2819, 809, 20, 56, "Input"],
Cell[120128, 2841, 573, 14, 56, "Input"],
Cell[CellGroupData[{
Cell[120726, 2859, 3880, 93, 311, "Input"],
Cell[124609, 2954, 106051, 1750, 306, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230697, 4709, 3263, 92, 294, "Input"],
Cell[233963, 4803, 65613, 1086, 272, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
